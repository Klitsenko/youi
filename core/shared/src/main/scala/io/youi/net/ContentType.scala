package io.youi.net

case class ContentType(mimeType: String, charSet: Option[String] = None, boundary: Option[String] = None) {
  lazy val outputString = {
    val b = new StringBuilder(mimeType)
    charSet.foreach { s =>
      b.append(s"; charset=$s")
    }
    boundary.foreach { s =>
      b.append(s"; boundary=$s")
    }
    b.toString()
  }

  def is(contentType: ContentType) = contentType.mimeType == mimeType

  override def toString = outputString
}

object ContentType {
  private var extension2MimeType = Map.empty[String, String]
  private var mimeType2Extensions = Map.empty[String, List[String]]
  private def map(extension: String, mimeType: String): Unit = {
    extension2MimeType += extension -> mimeType
    val extensions = mimeType2Extensions.getOrElse(mimeType, Nil)
    mimeType2Extensions += mimeType -> (extensions ::: List(extension))
  }

  def `application/andrew-inset`: ContentType = ContentType("application/andrew-inset")
  def `application/applixware`: ContentType = ContentType("application/applixware")
  def `application/atomcat+xml`: ContentType = ContentType("application/atomcat+xml")
  def `application/atomsvc+xml`: ContentType = ContentType("application/atomsvc+xml")
  def `application/atom+xml`: ContentType = ContentType("application/atom+xml")
  def `application/ccxml+xml`: ContentType = ContentType("application/ccxml+xml")
  def `application/cdmi-capability`: ContentType = ContentType("application/cdmi-capability")
  def `application/cdmi-container`: ContentType = ContentType("application/cdmi-container")
  def `application/cdmi-domain`: ContentType = ContentType("application/cdmi-domain")
  def `application/cdmi-object`: ContentType = ContentType("application/cdmi-object")
  def `application/cdmi-queue`: ContentType = ContentType("application/cdmi-queue")
  def `application/cu-seeme`: ContentType = ContentType("application/cu-seeme")
  def `application/davmount+xml`: ContentType = ContentType("application/davmount+xml")
  def `application/docbook+xml`: ContentType = ContentType("application/docbook+xml")
  def `application/dssc+der`: ContentType = ContentType("application/dssc+der")
  def `application/dssc+xml`: ContentType = ContentType("application/dssc+xml")
  def `application/ecmascript`: ContentType = ContentType("application/ecmascript")
  def `application/emma+xml`: ContentType = ContentType("application/emma+xml")
  def `application/epub+zip`: ContentType = ContentType("application/epub+zip")
  def `application/exi`: ContentType = ContentType("application/exi")
  def `application/font-tdpfr`: ContentType = ContentType("application/font-tdpfr")
  def `application/font-woff`: ContentType = ContentType("application/font-woff")
  def `application/gml+xml`: ContentType = ContentType("application/gml+xml")
  def `application/gpx+xml`: ContentType = ContentType("application/gpx+xml")
  def `application/gxf`: ContentType = ContentType("application/gxf")
  def `application/hyperstudio`: ContentType = ContentType("application/hyperstudio")
  def `application/inkml+xml`: ContentType = ContentType("application/inkml+xml")
  def `application/ipfix`: ContentType = ContentType("application/ipfix")
  def `application/java-archive`: ContentType = ContentType("application/java-archive")
  def `application/javascript`: ContentType = ContentType("application/javascript")
  def `application/java-serialized-object`: ContentType = ContentType("application/java-serialized-object")
  def `application/java-vm`: ContentType = ContentType("application/java-vm")
  def `application/json`: ContentType = ContentType("application/json")
  def `application/jsonml+json`: ContentType = ContentType("application/jsonml+json")
  def `application/lost+xml`: ContentType = ContentType("application/lost+xml")
  def `application/mac-binhex40`: ContentType = ContentType("application/mac-binhex40")
  def `application/mac-compactpro`: ContentType = ContentType("application/mac-compactpro")
  def `application/mads+xml`: ContentType = ContentType("application/mads+xml")
  def `application/marc`: ContentType = ContentType("application/marc")
  def `application/marcxml+xml`: ContentType = ContentType("application/marcxml+xml")
  def `application/mathematica`: ContentType = ContentType("application/mathematica")
  def `application/mathml+xml`: ContentType = ContentType("application/mathml+xml")
  def `application/mbox`: ContentType = ContentType("application/mbox")
  def `application/mediaservercontrol+xml`: ContentType = ContentType("application/mediaservercontrol+xml")
  def `application/metalink4+xml`: ContentType = ContentType("application/metalink4+xml")
  def `application/metalink+xml`: ContentType = ContentType("application/metalink+xml")
  def `application/mets+xml`: ContentType = ContentType("application/mets+xml")
  def `application/mods+xml`: ContentType = ContentType("application/mods+xml")
  def `application/mp21`: ContentType = ContentType("application/mp21")
  def `application/mp4`: ContentType = ContentType("application/mp4")
  def `application/msword`: ContentType = ContentType("application/msword")
  def `application/mxf`: ContentType = ContentType("application/mxf")
  def `application/octet-stream`: ContentType = ContentType("application/octet-stream")
  def `application/oda`: ContentType = ContentType("application/oda")
  def `application/oebps-package+xml`: ContentType = ContentType("application/oebps-package+xml")
  def `application/ogg`: ContentType = ContentType("application/ogg")
  def `application/omdoc+xml`: ContentType = ContentType("application/omdoc+xml")
  def `application/onenote`: ContentType = ContentType("application/onenote")
  def `application/oxps`: ContentType = ContentType("application/oxps")
  def `application/patch-ops-error+xml`: ContentType = ContentType("application/patch-ops-error+xml")
  def `application/pdf`: ContentType = ContentType("application/pdf")
  def `application/pgp-encrypted`: ContentType = ContentType("application/pgp-encrypted")
  def `application/pgp-signature`: ContentType = ContentType("application/pgp-signature")
  def `application/pics-rules`: ContentType = ContentType("application/pics-rules")
  def `application/pkcs10`: ContentType = ContentType("application/pkcs10")
  def `application/pkcs7-mime`: ContentType = ContentType("application/pkcs7-mime")
  def `application/pkcs7-signature`: ContentType = ContentType("application/pkcs7-signature")
  def `application/pkcs8`: ContentType = ContentType("application/pkcs8")
  def `application/pkix-attr-cert`: ContentType = ContentType("application/pkix-attr-cert")
  def `application/pkix-cert`: ContentType = ContentType("application/pkix-cert")
  def `application/pkixcmp`: ContentType = ContentType("application/pkixcmp")
  def `application/pkix-crl`: ContentType = ContentType("application/pkix-crl")
  def `application/pkix-pkipath`: ContentType = ContentType("application/pkix-pkipath")
  def `application/pls+xml`: ContentType = ContentType("application/pls+xml")
  def `application/postscript`: ContentType = ContentType("application/postscript")
  def `application/prs.cww`: ContentType = ContentType("application/prs.cww")
  def `application/pskc+xml`: ContentType = ContentType("application/pskc+xml")
  def `application/rdf+xml`: ContentType = ContentType("application/rdf+xml")
  def `application/reginfo+xml`: ContentType = ContentType("application/reginfo+xml")
  def `application/relax-ng-compact-syntax`: ContentType = ContentType("application/relax-ng-compact-syntax")
  def `application/resource-lists-diff+xml`: ContentType = ContentType("application/resource-lists-diff+xml")
  def `application/resource-lists+xml`: ContentType = ContentType("application/resource-lists+xml")
  def `application/rls-services+xml`: ContentType = ContentType("application/rls-services+xml")
  def `application/rpki-ghostbusters`: ContentType = ContentType("application/rpki-ghostbusters")
  def `application/rpki-manifest`: ContentType = ContentType("application/rpki-manifest")
  def `application/rpki-roa`: ContentType = ContentType("application/rpki-roa")
  def `application/rsd+xml`: ContentType = ContentType("application/rsd+xml")
  def `application/rss+xml`: ContentType = ContentType("application/rss+xml")
  def `application/rtf`: ContentType = ContentType("application/rtf")
  def `application/sbml+xml`: ContentType = ContentType("application/sbml+xml")
  def `application/scvp-cv-request`: ContentType = ContentType("application/scvp-cv-request")
  def `application/scvp-cv-response`: ContentType = ContentType("application/scvp-cv-response")
  def `application/scvp-vp-request`: ContentType = ContentType("application/scvp-vp-request")
  def `application/scvp-vp-response`: ContentType = ContentType("application/scvp-vp-response")
  def `application/sdp`: ContentType = ContentType("application/sdp")
  def `application/set-payment-initiation`: ContentType = ContentType("application/set-payment-initiation")
  def `application/set-registration-initiation`: ContentType = ContentType("application/set-registration-initiation")
  def `application/shf+xml`: ContentType = ContentType("application/shf+xml")
  def `application/smil+xml`: ContentType = ContentType("application/smil+xml")
  def `application/sparql-query`: ContentType = ContentType("application/sparql-query")
  def `application/sparql-results+xml`: ContentType = ContentType("application/sparql-results+xml")
  def `application/srgs`: ContentType = ContentType("application/srgs")
  def `application/srgs+xml`: ContentType = ContentType("application/srgs+xml")
  def `application/sru+xml`: ContentType = ContentType("application/sru+xml")
  def `application/ssdl+xml`: ContentType = ContentType("application/ssdl+xml")
  def `application/ssml+xml`: ContentType = ContentType("application/ssml+xml")
  def `application/tei+xml`: ContentType = ContentType("application/tei+xml")
  def `application/thraud+xml`: ContentType = ContentType("application/thraud+xml")
  def `application/timestamped-data`: ContentType = ContentType("application/timestamped-data")
  def `application/vnd.3gpp2.tcap`: ContentType = ContentType("application/vnd.3gpp2.tcap")
  def `application/vnd.3gpp.pic-bw-large`: ContentType = ContentType("application/vnd.3gpp.pic-bw-large")
  def `application/vnd.3gpp.pic-bw-small`: ContentType = ContentType("application/vnd.3gpp.pic-bw-small")
  def `application/vnd.3gpp.pic-bw-var`: ContentType = ContentType("application/vnd.3gpp.pic-bw-var")
  def `application/vnd.3m.post-it-notes`: ContentType = ContentType("application/vnd.3m.post-it-notes")
  def `application/vnd.accpac.simply.aso`: ContentType = ContentType("application/vnd.accpac.simply.aso")
  def `application/vnd.accpac.simply.imp`: ContentType = ContentType("application/vnd.accpac.simply.imp")
  def `application/vnd.acucobol`: ContentType = ContentType("application/vnd.acucobol")
  def `application/vnd.acucorp`: ContentType = ContentType("application/vnd.acucorp")
  def `application/vnd.adobe.air-application-installer-package+zip`: ContentType = ContentType("application/vnd.adobe.air-application-installer-package+zip")
  def `application/vnd.adobe.formscentral.fcdt`: ContentType = ContentType("application/vnd.adobe.formscentral.fcdt")
  def `application/vnd.adobe.fxp`: ContentType = ContentType("application/vnd.adobe.fxp")
  def `application/vnd.adobe.xdp+xml`: ContentType = ContentType("application/vnd.adobe.xdp+xml")
  def `application/vnd.adobe.xfdf`: ContentType = ContentType("application/vnd.adobe.xfdf")
  def `application/vnd.ahead.space`: ContentType = ContentType("application/vnd.ahead.space")
  def `application/vnd.airzip.filesecure.azf`: ContentType = ContentType("application/vnd.airzip.filesecure.azf")
  def `application/vnd.airzip.filesecure.azs`: ContentType = ContentType("application/vnd.airzip.filesecure.azs")
  def `application/vnd.amazon.ebook`: ContentType = ContentType("application/vnd.amazon.ebook")
  def `application/vnd.americandynamics.acc`: ContentType = ContentType("application/vnd.americandynamics.acc")
  def `application/vnd.amiga.ami`: ContentType = ContentType("application/vnd.amiga.ami")
  def `application/vnd.android.package-archive`: ContentType = ContentType("application/vnd.android.package-archive")
  def `application/vnd.anser-web-certificate-issue-initiation`: ContentType = ContentType("application/vnd.anser-web-certificate-issue-initiation")
  def `application/vnd.anser-web-funds-transfer-initiation`: ContentType = ContentType("application/vnd.anser-web-funds-transfer-initiation")
  def `application/vnd.antix.game-component`: ContentType = ContentType("application/vnd.antix.game-component")
  def `application/vnd.apple.installer+xml`: ContentType = ContentType("application/vnd.apple.installer+xml")
  def `application/vnd.apple.mpegurl`: ContentType = ContentType("application/vnd.apple.mpegurl")
  def `application/vnd.aristanetworks.swi`: ContentType = ContentType("application/vnd.aristanetworks.swi")
  def `application/vnd.astraea-software.iota`: ContentType = ContentType("application/vnd.astraea-software.iota")
  def `application/vnd.audiograph`: ContentType = ContentType("application/vnd.audiograph")
  def `application/vnd.blueice.multipass`: ContentType = ContentType("application/vnd.blueice.multipass")
  def `application/vnd.bmi`: ContentType = ContentType("application/vnd.bmi")
  def `application/vnd.businessobjects`: ContentType = ContentType("application/vnd.businessobjects")
  def `application/vnd.chemdraw+xml`: ContentType = ContentType("application/vnd.chemdraw+xml")
  def `application/vnd.chipnuts.karaoke-mmd`: ContentType = ContentType("application/vnd.chipnuts.karaoke-mmd")
  def `application/vnd.cinderella`: ContentType = ContentType("application/vnd.cinderella")
  def `application/vnd.claymore`: ContentType = ContentType("application/vnd.claymore")
  def `application/vnd.cloanto.rp9`: ContentType = ContentType("application/vnd.cloanto.rp9")
  def `application/vnd.clonk.c4group`: ContentType = ContentType("application/vnd.clonk.c4group")
  def `application/vnd.cluetrust.cartomobile-config`: ContentType = ContentType("application/vnd.cluetrust.cartomobile-config")
  def `application/vnd.cluetrust.cartomobile-config-pkg`: ContentType = ContentType("application/vnd.cluetrust.cartomobile-config-pkg")
  def `application/vnd.commonspace`: ContentType = ContentType("application/vnd.commonspace")
  def `application/vnd.contact.cmsg`: ContentType = ContentType("application/vnd.contact.cmsg")
  def `application/vnd.cosmocaller`: ContentType = ContentType("application/vnd.cosmocaller")
  def `application/vnd.crick.clicker`: ContentType = ContentType("application/vnd.crick.clicker")
  def `application/vnd.crick.clicker.keyboard`: ContentType = ContentType("application/vnd.crick.clicker.keyboard")
  def `application/vnd.crick.clicker.palette`: ContentType = ContentType("application/vnd.crick.clicker.palette")
  def `application/vnd.crick.clicker.template`: ContentType = ContentType("application/vnd.crick.clicker.template")
  def `application/vnd.crick.clicker.wordbank`: ContentType = ContentType("application/vnd.crick.clicker.wordbank")
  def `application/vnd.criticaltools.wbs+xml`: ContentType = ContentType("application/vnd.criticaltools.wbs+xml")
  def `application/vnd.ctc-posml`: ContentType = ContentType("application/vnd.ctc-posml")
  def `application/vnd.cups-ppd`: ContentType = ContentType("application/vnd.cups-ppd")
  def `application/vnd.curl.car`: ContentType = ContentType("application/vnd.curl.car")
  def `application/vnd.curl.pcurl`: ContentType = ContentType("application/vnd.curl.pcurl")
  def `application/vnd.dart`: ContentType = ContentType("application/vnd.dart")
  def `application/vnd.data-vision.rdz`: ContentType = ContentType("application/vnd.data-vision.rdz")
  def `application/vnd.dece.data`: ContentType = ContentType("application/vnd.dece.data")
  def `application/vnd.dece.ttml+xml`: ContentType = ContentType("application/vnd.dece.ttml+xml")
  def `application/vnd.dece.unspecified`: ContentType = ContentType("application/vnd.dece.unspecified")
  def `application/vnd.dece.zip`: ContentType = ContentType("application/vnd.dece.zip")
  def `application/vnd.denovo.fcselayout-link`: ContentType = ContentType("application/vnd.denovo.fcselayout-link")
  def `application/vnd.dna`: ContentType = ContentType("application/vnd.dna")
  def `application/vnd.dolby.mlp`: ContentType = ContentType("application/vnd.dolby.mlp")
  def `application/vnd.dpgraph`: ContentType = ContentType("application/vnd.dpgraph")
  def `application/vnd.dreamfactory`: ContentType = ContentType("application/vnd.dreamfactory")
  def `application/vnd.ds-keypoint`: ContentType = ContentType("application/vnd.ds-keypoint")
  def `application/vnd.dvb.ait`: ContentType = ContentType("application/vnd.dvb.ait")
  def `application/vnd.dvb.service`: ContentType = ContentType("application/vnd.dvb.service")
  def `application/vnd.dynageo`: ContentType = ContentType("application/vnd.dynageo")
  def `application/vnd.ecowin.chart`: ContentType = ContentType("application/vnd.ecowin.chart")
  def `application/vnd.enliven`: ContentType = ContentType("application/vnd.enliven")
  def `application/vnd.epson.esf`: ContentType = ContentType("application/vnd.epson.esf")
  def `application/vnd.epson.msf`: ContentType = ContentType("application/vnd.epson.msf")
  def `application/vnd.epson.quickanime`: ContentType = ContentType("application/vnd.epson.quickanime")
  def `application/vnd.epson.salt`: ContentType = ContentType("application/vnd.epson.salt")
  def `application/vnd.epson.ssf`: ContentType = ContentType("application/vnd.epson.ssf")
  def `application/vnd.eszigno3+xml`: ContentType = ContentType("application/vnd.eszigno3+xml")
  def `application/vnd.ezpix-album`: ContentType = ContentType("application/vnd.ezpix-album")
  def `application/vnd.ezpix-package`: ContentType = ContentType("application/vnd.ezpix-package")
  def `application/vnd.fdf`: ContentType = ContentType("application/vnd.fdf")
  def `application/vnd.fdsn.mseed`: ContentType = ContentType("application/vnd.fdsn.mseed")
  def `application/vnd.fdsn.seed`: ContentType = ContentType("application/vnd.fdsn.seed")
  def `application/vnd.flographit`: ContentType = ContentType("application/vnd.flographit")
  def `application/vnd.fluxtime.clip`: ContentType = ContentType("application/vnd.fluxtime.clip")
  def `application/vnd.framemaker`: ContentType = ContentType("application/vnd.framemaker")
  def `application/vnd.frogans.fnc`: ContentType = ContentType("application/vnd.frogans.fnc")
  def `application/vnd.frogans.ltf`: ContentType = ContentType("application/vnd.frogans.ltf")
  def `application/vnd.fsc.weblaunch`: ContentType = ContentType("application/vnd.fsc.weblaunch")
  def `application/vnd.fujitsu.oasys`: ContentType = ContentType("application/vnd.fujitsu.oasys")
  def `application/vnd.fujitsu.oasys2`: ContentType = ContentType("application/vnd.fujitsu.oasys2")
  def `application/vnd.fujitsu.oasys3`: ContentType = ContentType("application/vnd.fujitsu.oasys3")
  def `application/vnd.fujitsu.oasysgp`: ContentType = ContentType("application/vnd.fujitsu.oasysgp")
  def `application/vnd.fujitsu.oasysprs`: ContentType = ContentType("application/vnd.fujitsu.oasysprs")
  def `application/vnd.fujixerox.ddd`: ContentType = ContentType("application/vnd.fujixerox.ddd")
  def `application/vnd.fujixerox.docuworks`: ContentType = ContentType("application/vnd.fujixerox.docuworks")
  def `application/vnd.fujixerox.docuworks.binder`: ContentType = ContentType("application/vnd.fujixerox.docuworks.binder")
  def `application/vnd.fuzzysheet`: ContentType = ContentType("application/vnd.fuzzysheet")
  def `application/vnd.genomatix.tuxedo`: ContentType = ContentType("application/vnd.genomatix.tuxedo")
  def `application/vnd.geogebra.file`: ContentType = ContentType("application/vnd.geogebra.file")
  def `application/vnd.geogebra.tool`: ContentType = ContentType("application/vnd.geogebra.tool")
  def `application/vnd.geometry-explorer`: ContentType = ContentType("application/vnd.geometry-explorer")
  def `application/vnd.geonext`: ContentType = ContentType("application/vnd.geonext")
  def `application/vnd.geoplan`: ContentType = ContentType("application/vnd.geoplan")
  def `application/vnd.geospace`: ContentType = ContentType("application/vnd.geospace")
  def `application/vnd.gmx`: ContentType = ContentType("application/vnd.gmx")
  def `application/vnd.google-earth.kml+xml`: ContentType = ContentType("application/vnd.google-earth.kml+xml")
  def `application/vnd.google-earth.kmz`: ContentType = ContentType("application/vnd.google-earth.kmz")
  def `application/vnd.grafeq`: ContentType = ContentType("application/vnd.grafeq")
  def `application/vnd.groove-account`: ContentType = ContentType("application/vnd.groove-account")
  def `application/vnd.groove-help`: ContentType = ContentType("application/vnd.groove-help")
  def `application/vnd.groove-identity-message`: ContentType = ContentType("application/vnd.groove-identity-message")
  def `application/vnd.groove-injector`: ContentType = ContentType("application/vnd.groove-injector")
  def `application/vnd.groove-tool-message`: ContentType = ContentType("application/vnd.groove-tool-message")
  def `application/vnd.groove-tool-template`: ContentType = ContentType("application/vnd.groove-tool-template")
  def `application/vnd.groove-vcard`: ContentType = ContentType("application/vnd.groove-vcard")
  def `application/vnd.hal+xml`: ContentType = ContentType("application/vnd.hal+xml")
  def `application/vnd.handheld-entertainment+xml`: ContentType = ContentType("application/vnd.handheld-entertainment+xml")
  def `application/vnd.hbci`: ContentType = ContentType("application/vnd.hbci")
  def `application/vnd.hhe.lesson-player`: ContentType = ContentType("application/vnd.hhe.lesson-player")
  def `application/vnd.hp-hpgl`: ContentType = ContentType("application/vnd.hp-hpgl")
  def `application/vnd.hp-hpid`: ContentType = ContentType("application/vnd.hp-hpid")
  def `application/vnd.hp-hps`: ContentType = ContentType("application/vnd.hp-hps")
  def `application/vnd.hp-jlyt`: ContentType = ContentType("application/vnd.hp-jlyt")
  def `application/vnd.hp-pcl`: ContentType = ContentType("application/vnd.hp-pcl")
  def `application/vnd.hp-pclxl`: ContentType = ContentType("application/vnd.hp-pclxl")
  def `application/vnd.hydrostatix.sof-data`: ContentType = ContentType("application/vnd.hydrostatix.sof-data")
  def `application/vnd.ibm.minipay`: ContentType = ContentType("application/vnd.ibm.minipay")
  def `application/vnd.ibm.modcap`: ContentType = ContentType("application/vnd.ibm.modcap")
  def `application/vnd.ibm.rights-management`: ContentType = ContentType("application/vnd.ibm.rights-management")
  def `application/vnd.ibm.secure-container`: ContentType = ContentType("application/vnd.ibm.secure-container")
  def `application/vnd.iccprofile`: ContentType = ContentType("application/vnd.iccprofile")
  def `application/vnd.igloader`: ContentType = ContentType("application/vnd.igloader")
  def `application/vnd.immervision-ivp`: ContentType = ContentType("application/vnd.immervision-ivp")
  def `application/vnd.immervision-ivu`: ContentType = ContentType("application/vnd.immervision-ivu")
  def `application/vnd.insors.igm`: ContentType = ContentType("application/vnd.insors.igm")
  def `application/vnd.intercon.formnet`: ContentType = ContentType("application/vnd.intercon.formnet")
  def `application/vnd.intergeo`: ContentType = ContentType("application/vnd.intergeo")
  def `application/vnd.intu.qbo`: ContentType = ContentType("application/vnd.intu.qbo")
  def `application/vnd.intu.qfx`: ContentType = ContentType("application/vnd.intu.qfx")
  def `application/vnd.ipunplugged.rcprofile`: ContentType = ContentType("application/vnd.ipunplugged.rcprofile")
  def `application/vnd.irepository.package+xml`: ContentType = ContentType("application/vnd.irepository.package+xml")
  def `application/vnd.isac.fcs`: ContentType = ContentType("application/vnd.isac.fcs")
  def `application/vnd.is-xpr`: ContentType = ContentType("application/vnd.is-xpr")
  def `application/vnd.jam`: ContentType = ContentType("application/vnd.jam")
  def `application/vnd.jcp.javame.midlet-rms`: ContentType = ContentType("application/vnd.jcp.javame.midlet-rms")
  def `application/vnd.jisp`: ContentType = ContentType("application/vnd.jisp")
  def `application/vnd.joost.joda-archive`: ContentType = ContentType("application/vnd.joost.joda-archive")
  def `application/vnd.kahootz`: ContentType = ContentType("application/vnd.kahootz")
  def `application/vnd.kde.karbon`: ContentType = ContentType("application/vnd.kde.karbon")
  def `application/vnd.kde.kchart`: ContentType = ContentType("application/vnd.kde.kchart")
  def `application/vnd.kde.kformula`: ContentType = ContentType("application/vnd.kde.kformula")
  def `application/vnd.kde.kivio`: ContentType = ContentType("application/vnd.kde.kivio")
  def `application/vnd.kde.kontour`: ContentType = ContentType("application/vnd.kde.kontour")
  def `application/vnd.kde.kpresenter`: ContentType = ContentType("application/vnd.kde.kpresenter")
  def `application/vnd.kde.kspread`: ContentType = ContentType("application/vnd.kde.kspread")
  def `application/vnd.kde.kword`: ContentType = ContentType("application/vnd.kde.kword")
  def `application/vnd.kenameaapp`: ContentType = ContentType("application/vnd.kenameaapp")
  def `application/vnd.kidspiration`: ContentType = ContentType("application/vnd.kidspiration")
  def `application/vnd.kinar`: ContentType = ContentType("application/vnd.kinar")
  def `application/vnd.koan`: ContentType = ContentType("application/vnd.koan")
  def `application/vnd.kodak-descriptor`: ContentType = ContentType("application/vnd.kodak-descriptor")
  def `application/vnd.las.las+xml`: ContentType = ContentType("application/vnd.las.las+xml")
  def `application/vnd.llamagraphics.life-balance.desktop`: ContentType = ContentType("application/vnd.llamagraphics.life-balance.desktop")
  def `application/vnd.llamagraphics.life-balance.exchange+xml`: ContentType = ContentType("application/vnd.llamagraphics.life-balance.exchange+xml")
  def `application/vnd.lotus-1-2-3`: ContentType = ContentType("application/vnd.lotus-1-2-3")
  def `application/vnd.lotus-approach`: ContentType = ContentType("application/vnd.lotus-approach")
  def `application/vnd.lotus-freelance`: ContentType = ContentType("application/vnd.lotus-freelance")
  def `application/vnd.lotus-notes`: ContentType = ContentType("application/vnd.lotus-notes")
  def `application/vnd.lotus-organizer`: ContentType = ContentType("application/vnd.lotus-organizer")
  def `application/vnd.lotus-screencam`: ContentType = ContentType("application/vnd.lotus-screencam")
  def `application/vnd.lotus-wordpro`: ContentType = ContentType("application/vnd.lotus-wordpro")
  def `application/vnd.macports.portpkg`: ContentType = ContentType("application/vnd.macports.portpkg")
  def `application/vnd.mcd`: ContentType = ContentType("application/vnd.mcd")
  def `application/vnd.medcalcdata`: ContentType = ContentType("application/vnd.medcalcdata")
  def `application/vnd.mediastation.cdkey`: ContentType = ContentType("application/vnd.mediastation.cdkey")
  def `application/vnd.mfer`: ContentType = ContentType("application/vnd.mfer")
  def `application/vnd.mfmp`: ContentType = ContentType("application/vnd.mfmp")
  def `application/vnd.micrografx.flo`: ContentType = ContentType("application/vnd.micrografx.flo")
  def `application/vnd.micrografx.igx`: ContentType = ContentType("application/vnd.micrografx.igx")
  def `application/vnd.mif`: ContentType = ContentType("application/vnd.mif")
  def `application/vnd.mobius.daf`: ContentType = ContentType("application/vnd.mobius.daf")
  def `application/vnd.mobius.dis`: ContentType = ContentType("application/vnd.mobius.dis")
  def `application/vnd.mobius.mbk`: ContentType = ContentType("application/vnd.mobius.mbk")
  def `application/vnd.mobius.mqy`: ContentType = ContentType("application/vnd.mobius.mqy")
  def `application/vnd.mobius.msl`: ContentType = ContentType("application/vnd.mobius.msl")
  def `application/vnd.mobius.plc`: ContentType = ContentType("application/vnd.mobius.plc")
  def `application/vnd.mobius.txf`: ContentType = ContentType("application/vnd.mobius.txf")
  def `application/vnd.mophun.application`: ContentType = ContentType("application/vnd.mophun.application")
  def `application/vnd.mophun.certificate`: ContentType = ContentType("application/vnd.mophun.certificate")
  def `application/vnd.mozilla.xul+xml`: ContentType = ContentType("application/vnd.mozilla.xul+xml")
  def `application/vnd.ms-artgalry`: ContentType = ContentType("application/vnd.ms-artgalry")
  def `application/vnd.ms-cab-compressed`: ContentType = ContentType("application/vnd.ms-cab-compressed")
  def `application/vnd.mseq`: ContentType = ContentType("application/vnd.mseq")
  def `application/vnd.ms-excel`: ContentType = ContentType("application/vnd.ms-excel")
  def `application/vnd.ms-excel.addin.macroenabled.12`: ContentType = ContentType("application/vnd.ms-excel.addin.macroenabled.12")
  def `application/vnd.ms-excel.sheet.binary.macroenabled.12`: ContentType = ContentType("application/vnd.ms-excel.sheet.binary.macroenabled.12")
  def `application/vnd.ms-excel.sheet.macroenabled.12`: ContentType = ContentType("application/vnd.ms-excel.sheet.macroenabled.12")
  def `application/vnd.ms-excel.template.macroenabled.12`: ContentType = ContentType("application/vnd.ms-excel.template.macroenabled.12")
  def `application/vnd.ms-fontobject`: ContentType = ContentType("application/vnd.ms-fontobject")
  def `application/vnd.ms-htmlhelp`: ContentType = ContentType("application/vnd.ms-htmlhelp")
  def `application/vnd.ms-ims`: ContentType = ContentType("application/vnd.ms-ims")
  def `application/vnd.ms-lrm`: ContentType = ContentType("application/vnd.ms-lrm")
  def `application/vnd.ms-officetheme`: ContentType = ContentType("application/vnd.ms-officetheme")
  def `application/vnd.ms-pki.seccat`: ContentType = ContentType("application/vnd.ms-pki.seccat")
  def `application/vnd.ms-pki.stl`: ContentType = ContentType("application/vnd.ms-pki.stl")
  def `application/vnd.ms-powerpoint`: ContentType = ContentType("application/vnd.ms-powerpoint")
  def `application/vnd.ms-powerpoint.addin.macroenabled.12`: ContentType = ContentType("application/vnd.ms-powerpoint.addin.macroenabled.12")
  def `application/vnd.ms-powerpoint.presentation.macroenabled.12`: ContentType = ContentType("application/vnd.ms-powerpoint.presentation.macroenabled.12")
  def `application/vnd.ms-powerpoint.slide.macroenabled.12`: ContentType = ContentType("application/vnd.ms-powerpoint.slide.macroenabled.12")
  def `application/vnd.ms-powerpoint.slideshow.macroenabled.12`: ContentType = ContentType("application/vnd.ms-powerpoint.slideshow.macroenabled.12")
  def `application/vnd.ms-powerpoint.template.macroenabled.12`: ContentType = ContentType("application/vnd.ms-powerpoint.template.macroenabled.12")
  def `application/vnd.ms-project`: ContentType = ContentType("application/vnd.ms-project")
  def `application/vnd.ms-word.document.macroenabled.12`: ContentType = ContentType("application/vnd.ms-word.document.macroenabled.12")
  def `application/vnd.ms-word.template.macroenabled.12`: ContentType = ContentType("application/vnd.ms-word.template.macroenabled.12")
  def `application/vnd.ms-works`: ContentType = ContentType("application/vnd.ms-works")
  def `application/vnd.ms-wpl`: ContentType = ContentType("application/vnd.ms-wpl")
  def `application/vnd.ms-xpsdocument`: ContentType = ContentType("application/vnd.ms-xpsdocument")
  def `application/vnd.musician`: ContentType = ContentType("application/vnd.musician")
  def `application/vnd.muvee.style`: ContentType = ContentType("application/vnd.muvee.style")
  def `application/vnd.mynfc`: ContentType = ContentType("application/vnd.mynfc")
  def `application/vnd.neurolanguage.nlu`: ContentType = ContentType("application/vnd.neurolanguage.nlu")
  def `application/vnd.nitf`: ContentType = ContentType("application/vnd.nitf")
  def `application/vnd.noblenet-directory`: ContentType = ContentType("application/vnd.noblenet-directory")
  def `application/vnd.noblenet-sealer`: ContentType = ContentType("application/vnd.noblenet-sealer")
  def `application/vnd.noblenet-web`: ContentType = ContentType("application/vnd.noblenet-web")
  def `application/vnd.nokia.n-gage.data`: ContentType = ContentType("application/vnd.nokia.n-gage.data")
  def `application/vnd.nokia.n-gage.symbian.install`: ContentType = ContentType("application/vnd.nokia.n-gage.symbian.install")
  def `application/vnd.nokia.radio-preset`: ContentType = ContentType("application/vnd.nokia.radio-preset")
  def `application/vnd.nokia.radio-presets`: ContentType = ContentType("application/vnd.nokia.radio-presets")
  def `application/vnd.novadigm.edm`: ContentType = ContentType("application/vnd.novadigm.edm")
  def `application/vnd.novadigm.edx`: ContentType = ContentType("application/vnd.novadigm.edx")
  def `application/vnd.novadigm.ext`: ContentType = ContentType("application/vnd.novadigm.ext")
  def `application/vnd.oasis.opendocument.chart`: ContentType = ContentType("application/vnd.oasis.opendocument.chart")
  def `application/vnd.oasis.opendocument.chart-template`: ContentType = ContentType("application/vnd.oasis.opendocument.chart-template")
  def `application/vnd.oasis.opendocument.database`: ContentType = ContentType("application/vnd.oasis.opendocument.database")
  def `application/vnd.oasis.opendocument.formula`: ContentType = ContentType("application/vnd.oasis.opendocument.formula")
  def `application/vnd.oasis.opendocument.formula-template`: ContentType = ContentType("application/vnd.oasis.opendocument.formula-template")
  def `application/vnd.oasis.opendocument.graphics`: ContentType = ContentType("application/vnd.oasis.opendocument.graphics")
  def `application/vnd.oasis.opendocument.graphics-template`: ContentType = ContentType("application/vnd.oasis.opendocument.graphics-template")
  def `application/vnd.oasis.opendocument.image`: ContentType = ContentType("application/vnd.oasis.opendocument.image")
  def `application/vnd.oasis.opendocument.image-template`: ContentType = ContentType("application/vnd.oasis.opendocument.image-template")
  def `application/vnd.oasis.opendocument.presentation`: ContentType = ContentType("application/vnd.oasis.opendocument.presentation")
  def `application/vnd.oasis.opendocument.presentation-template`: ContentType = ContentType("application/vnd.oasis.opendocument.presentation-template")
  def `application/vnd.oasis.opendocument.spreadsheet`: ContentType = ContentType("application/vnd.oasis.opendocument.spreadsheet")
  def `application/vnd.oasis.opendocument.spreadsheet-template`: ContentType = ContentType("application/vnd.oasis.opendocument.spreadsheet-template")
  def `application/vnd.oasis.opendocument.text`: ContentType = ContentType("application/vnd.oasis.opendocument.text")
  def `application/vnd.oasis.opendocument.text-master`: ContentType = ContentType("application/vnd.oasis.opendocument.text-master")
  def `application/vnd.oasis.opendocument.text-template`: ContentType = ContentType("application/vnd.oasis.opendocument.text-template")
  def `application/vnd.oasis.opendocument.text-web`: ContentType = ContentType("application/vnd.oasis.opendocument.text-web")
  def `application/vnd.olpc-sugar`: ContentType = ContentType("application/vnd.olpc-sugar")
  def `application/vnd.oma.dd2+xml`: ContentType = ContentType("application/vnd.oma.dd2+xml")
  def `application/vnd.openofficeorg.extension`: ContentType = ContentType("application/vnd.openofficeorg.extension")
  def `application/vnd.openxmlformats-officedocument.presentationml.presentation`: ContentType = ContentType("application/vnd.openxmlformats-officedocument.presentationml.presentation")
  def `application/vnd.openxmlformats-officedocument.presentationml.slide`: ContentType = ContentType("application/vnd.openxmlformats-officedocument.presentationml.slide")
  def `application/vnd.openxmlformats-officedocument.presentationml.slideshow`: ContentType = ContentType("application/vnd.openxmlformats-officedocument.presentationml.slideshow")
  def `application/vnd.openxmlformats-officedocument.presentationml.template`: ContentType = ContentType("application/vnd.openxmlformats-officedocument.presentationml.template")
  def `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet`: ContentType = ContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
  def `application/vnd.openxmlformats-officedocument.spreadsheetml.template`: ContentType = ContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.template")
  def `application/vnd.openxmlformats-officedocument.wordprocessingml.document`: ContentType = ContentType("application/vnd.openxmlformats-officedocument.wordprocessingml.document")
  def `application/vnd.openxmlformats-officedocument.wordprocessingml.template`: ContentType = ContentType("application/vnd.openxmlformats-officedocument.wordprocessingml.template")
  def `application/vnd.osgeo.mapguide.package`: ContentType = ContentType("application/vnd.osgeo.mapguide.package")
  def `application/vnd.osgi.dp`: ContentType = ContentType("application/vnd.osgi.dp")
  def `application/vnd.osgi.subsystem`: ContentType = ContentType("application/vnd.osgi.subsystem")
  def `application/vnd.palm`: ContentType = ContentType("application/vnd.palm")
  def `application/vnd.pawaafile`: ContentType = ContentType("application/vnd.pawaafile")
  def `application/vnd.pg.format`: ContentType = ContentType("application/vnd.pg.format")
  def `application/vnd.pg.osasli`: ContentType = ContentType("application/vnd.pg.osasli")
  def `application/vnd.picsel`: ContentType = ContentType("application/vnd.picsel")
  def `application/vnd.pmi.widget`: ContentType = ContentType("application/vnd.pmi.widget")
  def `application/vnd.pocketlearn`: ContentType = ContentType("application/vnd.pocketlearn")
  def `application/vnd.powerbuilder6`: ContentType = ContentType("application/vnd.powerbuilder6")
  def `application/vnd.previewsystems.box`: ContentType = ContentType("application/vnd.previewsystems.box")
  def `application/vnd.proteus.magazine`: ContentType = ContentType("application/vnd.proteus.magazine")
  def `application/vnd.publishare-delta-tree`: ContentType = ContentType("application/vnd.publishare-delta-tree")
  def `application/vnd.pvi.ptid1`: ContentType = ContentType("application/vnd.pvi.ptid1")
  def `application/vnd.quark.quarkxpress`: ContentType = ContentType("application/vnd.quark.quarkxpress")
  def `application/vnd.realvnc.bed`: ContentType = ContentType("application/vnd.realvnc.bed")
  def `application/vnd.recordare.musicxml`: ContentType = ContentType("application/vnd.recordare.musicxml")
  def `application/vnd.recordare.musicxml+xml`: ContentType = ContentType("application/vnd.recordare.musicxml+xml")
  def `application/vnd.rig.cryptonote`: ContentType = ContentType("application/vnd.rig.cryptonote")
  def `application/vnd.rim.cod`: ContentType = ContentType("application/vnd.rim.cod")
  def `application/vnd.rn-realmedia`: ContentType = ContentType("application/vnd.rn-realmedia")
  def `application/vnd.rn-realmedia-vbr`: ContentType = ContentType("application/vnd.rn-realmedia-vbr")
  def `application/vnd.route66.link66+xml`: ContentType = ContentType("application/vnd.route66.link66+xml")
  def `application/vnd.sailingtracker.track`: ContentType = ContentType("application/vnd.sailingtracker.track")
  def `application/vnd.seemail`: ContentType = ContentType("application/vnd.seemail")
  def `application/vnd.sema`: ContentType = ContentType("application/vnd.sema")
  def `application/vnd.semd`: ContentType = ContentType("application/vnd.semd")
  def `application/vnd.semf`: ContentType = ContentType("application/vnd.semf")
  def `application/vnd.shana.informed.formdata`: ContentType = ContentType("application/vnd.shana.informed.formdata")
  def `application/vnd.shana.informed.formtemplate`: ContentType = ContentType("application/vnd.shana.informed.formtemplate")
  def `application/vnd.shana.informed.interchange`: ContentType = ContentType("application/vnd.shana.informed.interchange")
  def `application/vnd.shana.informed.package`: ContentType = ContentType("application/vnd.shana.informed.package")
  def `application/vnd.simtech-mindmapper`: ContentType = ContentType("application/vnd.simtech-mindmapper")
  def `application/vnd.smaf`: ContentType = ContentType("application/vnd.smaf")
  def `application/vnd.smart.teacher`: ContentType = ContentType("application/vnd.smart.teacher")
  def `application/vnd.solent.sdkm+xml`: ContentType = ContentType("application/vnd.solent.sdkm+xml")
  def `application/vnd.spotfire.dxp`: ContentType = ContentType("application/vnd.spotfire.dxp")
  def `application/vnd.spotfire.sfs`: ContentType = ContentType("application/vnd.spotfire.sfs")
  def `application/vnd.stardivision.calc`: ContentType = ContentType("application/vnd.stardivision.calc")
  def `application/vnd.stardivision.draw`: ContentType = ContentType("application/vnd.stardivision.draw")
  def `application/vnd.stardivision.impress`: ContentType = ContentType("application/vnd.stardivision.impress")
  def `application/vnd.stardivision.math`: ContentType = ContentType("application/vnd.stardivision.math")
  def `application/vnd.stardivision.writer`: ContentType = ContentType("application/vnd.stardivision.writer")
  def `application/vnd.stardivision.writer-global`: ContentType = ContentType("application/vnd.stardivision.writer-global")
  def `application/vnd.stepmania.package`: ContentType = ContentType("application/vnd.stepmania.package")
  def `application/vnd.stepmania.stepchart`: ContentType = ContentType("application/vnd.stepmania.stepchart")
  def `application/vnd.sun.xml.calc`: ContentType = ContentType("application/vnd.sun.xml.calc")
  def `application/vnd.sun.xml.calc.template`: ContentType = ContentType("application/vnd.sun.xml.calc.template")
  def `application/vnd.sun.xml.draw`: ContentType = ContentType("application/vnd.sun.xml.draw")
  def `application/vnd.sun.xml.draw.template`: ContentType = ContentType("application/vnd.sun.xml.draw.template")
  def `application/vnd.sun.xml.impress`: ContentType = ContentType("application/vnd.sun.xml.impress")
  def `application/vnd.sun.xml.impress.template`: ContentType = ContentType("application/vnd.sun.xml.impress.template")
  def `application/vnd.sun.xml.math`: ContentType = ContentType("application/vnd.sun.xml.math")
  def `application/vnd.sun.xml.writer`: ContentType = ContentType("application/vnd.sun.xml.writer")
  def `application/vnd.sun.xml.writer.global`: ContentType = ContentType("application/vnd.sun.xml.writer.global")
  def `application/vnd.sun.xml.writer.template`: ContentType = ContentType("application/vnd.sun.xml.writer.template")
  def `application/vnd.sus-calendar`: ContentType = ContentType("application/vnd.sus-calendar")
  def `application/vnd.svd`: ContentType = ContentType("application/vnd.svd")
  def `application/vnd.symbian.install`: ContentType = ContentType("application/vnd.symbian.install")
  def `application/vnd.syncml.dm+wbxml`: ContentType = ContentType("application/vnd.syncml.dm+wbxml")
  def `application/vnd.syncml.dm+xml`: ContentType = ContentType("application/vnd.syncml.dm+xml")
  def `application/vnd.syncml+xml`: ContentType = ContentType("application/vnd.syncml+xml")
  def `application/vnd.tao.intent-module-archive`: ContentType = ContentType("application/vnd.tao.intent-module-archive")
  def `application/vnd.tcpdump.pcap`: ContentType = ContentType("application/vnd.tcpdump.pcap")
  def `application/vnd.tmobile-livetv`: ContentType = ContentType("application/vnd.tmobile-livetv")
  def `application/vnd.trid.tpt`: ContentType = ContentType("application/vnd.trid.tpt")
  def `application/vnd.triscape.mxs`: ContentType = ContentType("application/vnd.triscape.mxs")
  def `application/vnd.trueapp`: ContentType = ContentType("application/vnd.trueapp")
  def `application/vnd.ufdl`: ContentType = ContentType("application/vnd.ufdl")
  def `application/vnd.uiq.theme`: ContentType = ContentType("application/vnd.uiq.theme")
  def `application/vnd.umajin`: ContentType = ContentType("application/vnd.umajin")
  def `application/vnd.unity`: ContentType = ContentType("application/vnd.unity")
  def `application/vnd.uoml+xml`: ContentType = ContentType("application/vnd.uoml+xml")
  def `application/vnd.vcx`: ContentType = ContentType("application/vnd.vcx")
  def `application/vnd.visio`: ContentType = ContentType("application/vnd.visio")
  def `application/vnd.visionary`: ContentType = ContentType("application/vnd.visionary")
  def `application/vnd.vsf`: ContentType = ContentType("application/vnd.vsf")
  def `application/vnd.wap.wbxml`: ContentType = ContentType("application/vnd.wap.wbxml")
  def `application/vnd.wap.wmlc`: ContentType = ContentType("application/vnd.wap.wmlc")
  def `application/vnd.wap.wmlscriptc`: ContentType = ContentType("application/vnd.wap.wmlscriptc")
  def `application/vnd.webturbo`: ContentType = ContentType("application/vnd.webturbo")
  def `application/vnd.wolfram.player`: ContentType = ContentType("application/vnd.wolfram.player")
  def `application/vnd.wordperfect`: ContentType = ContentType("application/vnd.wordperfect")
  def `application/vnd.wqd`: ContentType = ContentType("application/vnd.wqd")
  def `application/vnd.wt.stf`: ContentType = ContentType("application/vnd.wt.stf")
  def `application/vnd.xara`: ContentType = ContentType("application/vnd.xara")
  def `application/vnd.xfdl`: ContentType = ContentType("application/vnd.xfdl")
  def `application/vnd.yamaha.hv-dic`: ContentType = ContentType("application/vnd.yamaha.hv-dic")
  def `application/vnd.yamaha.hv-script`: ContentType = ContentType("application/vnd.yamaha.hv-script")
  def `application/vnd.yamaha.hv-voice`: ContentType = ContentType("application/vnd.yamaha.hv-voice")
  def `application/vnd.yamaha.openscoreformat`: ContentType = ContentType("application/vnd.yamaha.openscoreformat")
  def `application/vnd.yamaha.openscoreformat.osfpvg+xml`: ContentType = ContentType("application/vnd.yamaha.openscoreformat.osfpvg+xml")
  def `application/vnd.yamaha.smaf-audio`: ContentType = ContentType("application/vnd.yamaha.smaf-audio")
  def `application/vnd.yamaha.smaf-phrase`: ContentType = ContentType("application/vnd.yamaha.smaf-phrase")
  def `application/vnd.yellowriver-custom-menu`: ContentType = ContentType("application/vnd.yellowriver-custom-menu")
  def `application/vnd.zul`: ContentType = ContentType("application/vnd.zul")
  def `application/vnd.zzazz.deck+xml`: ContentType = ContentType("application/vnd.zzazz.deck+xml")
  def `application/voicexml+xml`: ContentType = ContentType("application/voicexml+xml")
  def `application/widget`: ContentType = ContentType("application/widget")
  def `application/winhlp`: ContentType = ContentType("application/winhlp")
  def `application/wsdl+xml`: ContentType = ContentType("application/wsdl+xml")
  def `application/wspolicy+xml`: ContentType = ContentType("application/wspolicy+xml")
  def `application/x-7z-compressed`: ContentType = ContentType("application/x-7z-compressed")
  def `application/x-abiword`: ContentType = ContentType("application/x-abiword")
  def `application/x-ace-compressed`: ContentType = ContentType("application/x-ace-compressed")
  def `application/xaml+xml`: ContentType = ContentType("application/xaml+xml")
  def `application/x-apple-diskimage`: ContentType = ContentType("application/x-apple-diskimage")
  def `application/x-authorware-bin`: ContentType = ContentType("application/x-authorware-bin")
  def `application/x-authorware-map`: ContentType = ContentType("application/x-authorware-map")
  def `application/x-authorware-seg`: ContentType = ContentType("application/x-authorware-seg")
  def `application/x-bcpio`: ContentType = ContentType("application/x-bcpio")
  def `application/x-bittorrent`: ContentType = ContentType("application/x-bittorrent")
  def `application/x-blorb`: ContentType = ContentType("application/x-blorb")
  def `application/x-bzip`: ContentType = ContentType("application/x-bzip")
  def `application/x-bzip2`: ContentType = ContentType("application/x-bzip2")
  def `application/xcap-diff+xml`: ContentType = ContentType("application/xcap-diff+xml")
  def `application/x-cbr`: ContentType = ContentType("application/x-cbr")
  def `application/x-cdlink`: ContentType = ContentType("application/x-cdlink")
  def `application/x-cfs-compressed`: ContentType = ContentType("application/x-cfs-compressed")
  def `application/x-chat`: ContentType = ContentType("application/x-chat")
  def `application/x-chess-pgn`: ContentType = ContentType("application/x-chess-pgn")
  def `application/x-conference`: ContentType = ContentType("application/x-conference")
  def `application/x-cpio`: ContentType = ContentType("application/x-cpio")
  def `application/x-csh`: ContentType = ContentType("application/x-csh")
  def `application/x-debian-package`: ContentType = ContentType("application/x-debian-package")
  def `application/x-dgc-compressed`: ContentType = ContentType("application/x-dgc-compressed")
  def `application/x-director`: ContentType = ContentType("application/x-director")
  def `application/x-doom`: ContentType = ContentType("application/x-doom")
  def `application/x-dtbncx+xml`: ContentType = ContentType("application/x-dtbncx+xml")
  def `application/x-dtbook+xml`: ContentType = ContentType("application/x-dtbook+xml")
  def `application/x-dtbresource+xml`: ContentType = ContentType("application/x-dtbresource+xml")
  def `application/x-dvi`: ContentType = ContentType("application/x-dvi")
  def `application/xenc+xml`: ContentType = ContentType("application/xenc+xml")
  def `application/x-envoy`: ContentType = ContentType("application/x-envoy")
  def `application/x-eva`: ContentType = ContentType("application/x-eva")
  def `application/x-font-bdf`: ContentType = ContentType("application/x-font-bdf")
  def `application/x-font-ghostscript`: ContentType = ContentType("application/x-font-ghostscript")
  def `application/x-font-linux-psf`: ContentType = ContentType("application/x-font-linux-psf")
  def `application/x-font-otf`: ContentType = ContentType("application/x-font-otf")
  def `application/x-font-pcf`: ContentType = ContentType("application/x-font-pcf")
  def `application/x-font-snf`: ContentType = ContentType("application/x-font-snf")
  def `application/x-font-ttf`: ContentType = ContentType("application/x-font-ttf")
  def `application/x-font-type1`: ContentType = ContentType("application/x-font-type1")
  def `application/x-freearc`: ContentType = ContentType("application/x-freearc")
  def `application/x-futuresplash`: ContentType = ContentType("application/x-futuresplash")
  def `application/x-gca-compressed`: ContentType = ContentType("application/x-gca-compressed")
  def `application/x-glulx`: ContentType = ContentType("application/x-glulx")
  def `application/x-gnumeric`: ContentType = ContentType("application/x-gnumeric")
  def `application/x-gramps-xml`: ContentType = ContentType("application/x-gramps-xml")
  def `application/x-gtar`: ContentType = ContentType("application/x-gtar")
  def `application/x-hdf`: ContentType = ContentType("application/x-hdf")
  def `application/xhtml+xml`: ContentType = ContentType("application/xhtml+xml")
  def `application/x-install-instructions`: ContentType = ContentType("application/x-install-instructions")
  def `application/x-iso9660-image`: ContentType = ContentType("application/x-iso9660-image")
  def `application/x-java-jnlp-file`: ContentType = ContentType("application/x-java-jnlp-file")
  def `application/x-latex`: ContentType = ContentType("application/x-latex")
  def `application/x-lzh-compressed`: ContentType = ContentType("application/x-lzh-compressed")
  def `application/x-mie`: ContentType = ContentType("application/x-mie")
  def `application/x-www-form-urlencoded` = ContentType("application/x-www-form-urlencoded")
  def `application/xml`: ContentType = ContentType("application/xml")
  def `application/xml-dtd`: ContentType = ContentType("application/xml-dtd")
  def `application/x-mobipocket-ebook`: ContentType = ContentType("application/x-mobipocket-ebook")
  def `application/x-msaccess`: ContentType = ContentType("application/x-msaccess")
  def `application/x-ms-application`: ContentType = ContentType("application/x-ms-application")
  def `application/x-msbinder`: ContentType = ContentType("application/x-msbinder")
  def `application/x-mscardfile`: ContentType = ContentType("application/x-mscardfile")
  def `application/x-msclip`: ContentType = ContentType("application/x-msclip")
  def `application/x-msdownload`: ContentType = ContentType("application/x-msdownload")
  def `application/x-msmediaview`: ContentType = ContentType("application/x-msmediaview")
  def `application/x-msmetafile`: ContentType = ContentType("application/x-msmetafile")
  def `application/x-msmoney`: ContentType = ContentType("application/x-msmoney")
  def `application/x-mspublisher`: ContentType = ContentType("application/x-mspublisher")
  def `application/x-msschedule`: ContentType = ContentType("application/x-msschedule")
  def `application/x-ms-shortcut`: ContentType = ContentType("application/x-ms-shortcut")
  def `application/x-msterminal`: ContentType = ContentType("application/x-msterminal")
  def `application/x-ms-wmd`: ContentType = ContentType("application/x-ms-wmd")
  def `application/x-ms-wmz`: ContentType = ContentType("application/x-ms-wmz")
  def `application/x-mswrite`: ContentType = ContentType("application/x-mswrite")
  def `application/x-ms-xbap`: ContentType = ContentType("application/x-ms-xbap")
  def `application/x-netcdf`: ContentType = ContentType("application/x-netcdf")
  def `application/x-nzb`: ContentType = ContentType("application/x-nzb")
  def `application/xop+xml`: ContentType = ContentType("application/xop+xml")
  def `application/x-pkcs12`: ContentType = ContentType("application/x-pkcs12")
  def `application/x-pkcs7-certificates`: ContentType = ContentType("application/x-pkcs7-certificates")
  def `application/x-pkcs7-certreqresp`: ContentType = ContentType("application/x-pkcs7-certreqresp")
  def `application/xproc+xml`: ContentType = ContentType("application/xproc+xml")
  def `application/x-rar-compressed`: ContentType = ContentType("application/x-rar-compressed")
  def `application/x-research-info-systems`: ContentType = ContentType("application/x-research-info-systems")
  def `application/x-sh`: ContentType = ContentType("application/x-sh")
  def `application/x-shar`: ContentType = ContentType("application/x-shar")
  def `application/x-shockwave-flash`: ContentType = ContentType("application/x-shockwave-flash")
  def `application/x-silverlight-app`: ContentType = ContentType("application/x-silverlight-app")
  def `application/xslt+xml`: ContentType = ContentType("application/xslt+xml")
  def `application/xspf+xml`: ContentType = ContentType("application/xspf+xml")
  def `application/x-sql`: ContentType = ContentType("application/x-sql")
  def `application/x-stuffit`: ContentType = ContentType("application/x-stuffit")
  def `application/x-stuffitx`: ContentType = ContentType("application/x-stuffitx")
  def `application/x-subrip`: ContentType = ContentType("application/x-subrip")
  def `application/x-sv4cpio`: ContentType = ContentType("application/x-sv4cpio")
  def `application/x-sv4crc`: ContentType = ContentType("application/x-sv4crc")
  def `application/x-t3vm-image`: ContentType = ContentType("application/x-t3vm-image")
  def `application/x-tads`: ContentType = ContentType("application/x-tads")
  def `application/x-tar`: ContentType = ContentType("application/x-tar")
  def `application/x-tcl`: ContentType = ContentType("application/x-tcl")
  def `application/x-tex`: ContentType = ContentType("application/x-tex")
  def `application/x-texinfo`: ContentType = ContentType("application/x-texinfo")
  def `application/x-tex-tfm`: ContentType = ContentType("application/x-tex-tfm")
  def `application/x-tgif`: ContentType = ContentType("application/x-tgif")
  def `application/x-ustar`: ContentType = ContentType("application/x-ustar")
  def `application/xv+xml`: ContentType = ContentType("application/xv+xml")
  def `application/x-wais-source`: ContentType = ContentType("application/x-wais-source")
  def `application/x-x509-ca-cert`: ContentType = ContentType("application/x-x509-ca-cert")
  def `application/x-xfig`: ContentType = ContentType("application/x-xfig")
  def `application/x-xliff+xml`: ContentType = ContentType("application/x-xliff+xml")
  def `application/x-xpinstall`: ContentType = ContentType("application/x-xpinstall")
  def `application/x-xz`: ContentType = ContentType("application/x-xz")
  def `application/x-zmachine`: ContentType = ContentType("application/x-zmachine")
  def `application/yang`: ContentType = ContentType("application/yang")
  def `application/yin+xml`: ContentType = ContentType("application/yin+xml")
  def `application/zip`: ContentType = ContentType("application/zip")
  def `audio/adpcm`: ContentType = ContentType("audio/adpcm")
  def `audio/basic`: ContentType = ContentType("audio/basic")
  def `audio/midi`: ContentType = ContentType("audio/midi")
  def `audio/mp4`: ContentType = ContentType("audio/mp4")
  def `audio/mpeg`: ContentType = ContentType("audio/mpeg")
  def `audio/ogg`: ContentType = ContentType("audio/ogg")
  def `audio/s3m`: ContentType = ContentType("audio/s3m")
  def `audio/silk`: ContentType = ContentType("audio/silk")
  def `audio/vnd.dece.audio`: ContentType = ContentType("audio/vnd.dece.audio")
  def `audio/vnd.digital-winds`: ContentType = ContentType("audio/vnd.digital-winds")
  def `audio/vnd.dra`: ContentType = ContentType("audio/vnd.dra")
  def `audio/vnd.dts`: ContentType = ContentType("audio/vnd.dts")
  def `audio/vnd.dts.hd`: ContentType = ContentType("audio/vnd.dts.hd")
  def `audio/vnd.lucent.voice`: ContentType = ContentType("audio/vnd.lucent.voice")
  def `audio/vnd.ms-playready.media.pya`: ContentType = ContentType("audio/vnd.ms-playready.media.pya")
  def `audio/vnd.nuera.ecelp4800`: ContentType = ContentType("audio/vnd.nuera.ecelp4800")
  def `audio/vnd.nuera.ecelp7470`: ContentType = ContentType("audio/vnd.nuera.ecelp7470")
  def `audio/vnd.nuera.ecelp9600`: ContentType = ContentType("audio/vnd.nuera.ecelp9600")
  def `audio/vnd.rip`: ContentType = ContentType("audio/vnd.rip")
  def `audio/webm`: ContentType = ContentType("audio/webm")
  def `audio/x-aac`: ContentType = ContentType("audio/x-aac")
  def `audio/x-aiff`: ContentType = ContentType("audio/x-aiff")
  def `audio/x-caf`: ContentType = ContentType("audio/x-caf")
  def `audio/x-flac`: ContentType = ContentType("audio/x-flac")
  def `audio/xm`: ContentType = ContentType("audio/xm")
  def `audio/x-matroska`: ContentType = ContentType("audio/x-matroska")
  def `audio/x-mpegurl`: ContentType = ContentType("audio/x-mpegurl")
  def `audio/x-ms-wax`: ContentType = ContentType("audio/x-ms-wax")
  def `audio/x-ms-wma`: ContentType = ContentType("audio/x-ms-wma")
  def `audio/x-pn-realaudio`: ContentType = ContentType("audio/x-pn-realaudio")
  def `audio/x-pn-realaudio-plugin`: ContentType = ContentType("audio/x-pn-realaudio-plugin")
  def `audio/x-wav`: ContentType = ContentType("audio/x-wav")
  def `chemical/x-cdx`: ContentType = ContentType("chemical/x-cdx")
  def `chemical/x-cif`: ContentType = ContentType("chemical/x-cif")
  def `chemical/x-cmdf`: ContentType = ContentType("chemical/x-cmdf")
  def `chemical/x-cml`: ContentType = ContentType("chemical/x-cml")
  def `chemical/x-csml`: ContentType = ContentType("chemical/x-csml")
  def `chemical/x-xyz`: ContentType = ContentType("chemical/x-xyz")
  def `image/bmp`: ContentType = ContentType("image/bmp")
  def `image/cgm`: ContentType = ContentType("image/cgm")
  def `image/g3fax`: ContentType = ContentType("image/g3fax")
  def `image/gif`: ContentType = ContentType("image/gif")
  def `image/ief`: ContentType = ContentType("image/ief")
  def `image/jpeg`: ContentType = ContentType("image/jpeg")
  def `image/ktx`: ContentType = ContentType("image/ktx")
  def `image/png`: ContentType = ContentType("image/png")
  def `image/prs.btif`: ContentType = ContentType("image/prs.btif")
  def `image/sgi`: ContentType = ContentType("image/sgi")
  def `image/svg+xml`: ContentType = ContentType("image/svg+xml")
  def `image/tiff`: ContentType = ContentType("image/tiff")
  def `image/vnd.adobe.photoshop`: ContentType = ContentType("image/vnd.adobe.photoshop")
  def `image/vnd.dece.graphic`: ContentType = ContentType("image/vnd.dece.graphic")
  def `image/vnd.djvu`: ContentType = ContentType("image/vnd.djvu")
  def `image/vnd.dvb.subtitle`: ContentType = ContentType("image/vnd.dvb.subtitle")
  def `image/vnd.dwg`: ContentType = ContentType("image/vnd.dwg")
  def `image/vnd.dxf`: ContentType = ContentType("image/vnd.dxf")
  def `image/vnd.fastbidsheet`: ContentType = ContentType("image/vnd.fastbidsheet")
  def `image/vnd.fpx`: ContentType = ContentType("image/vnd.fpx")
  def `image/vnd.fst`: ContentType = ContentType("image/vnd.fst")
  def `image/vnd.fujixerox.edmics-mmr`: ContentType = ContentType("image/vnd.fujixerox.edmics-mmr")
  def `image/vnd.fujixerox.edmics-rlc`: ContentType = ContentType("image/vnd.fujixerox.edmics-rlc")
  def `image/vnd.ms-modi`: ContentType = ContentType("image/vnd.ms-modi")
  def `image/vnd.ms-photo`: ContentType = ContentType("image/vnd.ms-photo")
  def `image/vnd.net-fpx`: ContentType = ContentType("image/vnd.net-fpx")
  def `image/vnd.wap.wbmp`: ContentType = ContentType("image/vnd.wap.wbmp")
  def `image/vnd.xiff`: ContentType = ContentType("image/vnd.xiff")
  def `image/webp`: ContentType = ContentType("image/webp")
  def `image/x-3ds`: ContentType = ContentType("image/x-3ds")
  def `image/x-cmu-raster`: ContentType = ContentType("image/x-cmu-raster")
  def `image/x-cmx`: ContentType = ContentType("image/x-cmx")
  def `image/x-freehand`: ContentType = ContentType("image/x-freehand")
  def `image/x-icon`: ContentType = ContentType("image/x-icon")
  def `image/x-mrsid-image`: ContentType = ContentType("image/x-mrsid-image")
  def `image/x-pcx`: ContentType = ContentType("image/x-pcx")
  def `image/x-pict`: ContentType = ContentType("image/x-pict")
  def `image/x-portable-anymap`: ContentType = ContentType("image/x-portable-anymap")
  def `image/x-portable-bitmap`: ContentType = ContentType("image/x-portable-bitmap")
  def `image/x-portable-graymap`: ContentType = ContentType("image/x-portable-graymap")
  def `image/x-portable-pixmap`: ContentType = ContentType("image/x-portable-pixmap")
  def `image/x-rgb`: ContentType = ContentType("image/x-rgb")
  def `image/x-tga`: ContentType = ContentType("image/x-tga")
  def `image/x-xbitmap`: ContentType = ContentType("image/x-xbitmap")
  def `image/x-xpixmap`: ContentType = ContentType("image/x-xpixmap")
  def `image/x-xwindowdump`: ContentType = ContentType("image/x-xwindowdump")
  def `message/rfc822`: ContentType = ContentType("message/rfc822")
  def `model/iges`: ContentType = ContentType("model/iges")
  def `model/mesh`: ContentType = ContentType("model/mesh")
  def `model/vnd.collada+xml`: ContentType = ContentType("model/vnd.collada+xml")
  def `model/vnd.dwf`: ContentType = ContentType("model/vnd.dwf")
  def `model/vnd.gdl`: ContentType = ContentType("model/vnd.gdl")
  def `model/vnd.gtw`: ContentType = ContentType("model/vnd.gtw")
  def `model/vnd.mts`: ContentType = ContentType("model/vnd.mts")
  def `model/vnd.vtu`: ContentType = ContentType("model/vnd.vtu")
  def `model/vrml`: ContentType = ContentType("model/vrml")
  def `model/x3d+binary`: ContentType = ContentType("model/x3d+binary")
  def `model/x3d+vrml`: ContentType = ContentType("model/x3d+vrml")
  def `model/x3d+xml`: ContentType = ContentType("model/x3d+xml")
  def `multipart/form-data` = ContentType("multipart/form-data")
  def `text/cache-manifest`: ContentType = ContentType("text/cache-manifest")
  def `text/calendar`: ContentType = ContentType("text/calendar")
  def `text/css`: ContentType = ContentType("text/css")
  def `text/csv`: ContentType = ContentType("text/csv")
  def `text/html`: ContentType = ContentType("text/html")
  def `text/n3`: ContentType = ContentType("text/n3")
  def `text/plain`: ContentType = ContentType("text/plain")
  def `text/prs.lines.tag`: ContentType = ContentType("text/prs.lines.tag")
  def `text/richtext`: ContentType = ContentType("text/richtext")
  def `text/sgml`: ContentType = ContentType("text/sgml")
  def `text/tab-separated-values`: ContentType = ContentType("text/tab-separated-values")
  def `text/troff`: ContentType = ContentType("text/troff")
  def `text/turtle`: ContentType = ContentType("text/turtle")
  def `text/uri-list`: ContentType = ContentType("text/uri-list")
  def `text/vcard`: ContentType = ContentType("text/vcard")
  def `text/vnd.curl`: ContentType = ContentType("text/vnd.curl")
  def `text/vnd.curl.dcurl`: ContentType = ContentType("text/vnd.curl.dcurl")
  def `text/vnd.curl.mcurl`: ContentType = ContentType("text/vnd.curl.mcurl")
  def `text/vnd.curl.scurl`: ContentType = ContentType("text/vnd.curl.scurl")
  def `text/vnd.dvb.subtitle`: ContentType = ContentType("text/vnd.dvb.subtitle")
  def `text/vnd.fly`: ContentType = ContentType("text/vnd.fly")
  def `text/vnd.fmi.flexstor`: ContentType = ContentType("text/vnd.fmi.flexstor")
  def `text/vnd.graphviz`: ContentType = ContentType("text/vnd.graphviz")
  def `text/vnd.in3d.3dml`: ContentType = ContentType("text/vnd.in3d.3dml")
  def `text/vnd.in3d.spot`: ContentType = ContentType("text/vnd.in3d.spot")
  def `text/vnd.sun.j2me.app-descriptor`: ContentType = ContentType("text/vnd.sun.j2me.app-descriptor")
  def `text/vnd.wap.wml`: ContentType = ContentType("text/vnd.wap.wml")
  def `text/vnd.wap.wmlscript`: ContentType = ContentType("text/vnd.wap.wmlscript")
  def `text/x-asm`: ContentType = ContentType("text/x-asm")
  def `text/x-c`: ContentType = ContentType("text/x-c")
  def `text/x-fortran`: ContentType = ContentType("text/x-fortran")
  def `text/x-java-source`: ContentType = ContentType("text/x-java-source")
  def `text/x-nfo`: ContentType = ContentType("text/x-nfo")
  def `text/x-opml`: ContentType = ContentType("text/x-opml")
  def `text/x-pascal`: ContentType = ContentType("text/x-pascal")
  def `text/x-setext`: ContentType = ContentType("text/x-setext")
  def `text/x-sfv`: ContentType = ContentType("text/x-sfv")
  def `text/x-uuencode`: ContentType = ContentType("text/x-uuencode")
  def `text/x-vcalendar`: ContentType = ContentType("text/x-vcalendar")
  def `text/x-vcard`: ContentType = ContentType("text/x-vcard")
  def `text/xml`: ContentType = ContentType("text/xml")
  def `video/3gpp`: ContentType = ContentType("video/3gpp")
  def `video/3gpp2`: ContentType = ContentType("video/3gpp2")
  def `video/h261`: ContentType = ContentType("video/h261")
  def `video/h263`: ContentType = ContentType("video/h263")
  def `video/h264`: ContentType = ContentType("video/h264")
  def `video/jpeg`: ContentType = ContentType("video/jpeg")
  def `video/jpm`: ContentType = ContentType("video/jpm")
  def `video/mj2`: ContentType = ContentType("video/mj2")
  def `video/mp4`: ContentType = ContentType("video/mp4")
  def `video/mpeg`: ContentType = ContentType("video/mpeg")
  def `video/ogg`: ContentType = ContentType("video/ogg")
  def `video/quicktime`: ContentType = ContentType("video/quicktime")
  def `video/vnd.dece.hd`: ContentType = ContentType("video/vnd.dece.hd")
  def `video/vnd.dece.mobile`: ContentType = ContentType("video/vnd.dece.mobile")
  def `video/vnd.dece.pd`: ContentType = ContentType("video/vnd.dece.pd")
  def `video/vnd.dece.sd`: ContentType = ContentType("video/vnd.dece.sd")
  def `video/vnd.dece.video`: ContentType = ContentType("video/vnd.dece.video")
  def `video/vnd.dvb.file`: ContentType = ContentType("video/vnd.dvb.file")
  def `video/vnd.fvt`: ContentType = ContentType("video/vnd.fvt")
  def `video/vnd.mpegurl`: ContentType = ContentType("video/vnd.mpegurl")
  def `video/vnd.ms-playready.media.pyv`: ContentType = ContentType("video/vnd.ms-playready.media.pyv")
  def `video/vnd.uvvu.mp4`: ContentType = ContentType("video/vnd.uvvu.mp4")
  def `video/vnd.vivo`: ContentType = ContentType("video/vnd.vivo")
  def `video/webm`: ContentType = ContentType("video/webm")
  def `video/x-f4v`: ContentType = ContentType("video/x-f4v")
  def `video/x-fli`: ContentType = ContentType("video/x-fli")
  def `video/x-flv`: ContentType = ContentType("video/x-flv")
  def `video/x-m4v`: ContentType = ContentType("video/x-m4v")
  def `video/x-matroska`: ContentType = ContentType("video/x-matroska")
  def `video/x-mng`: ContentType = ContentType("video/x-mng")
  def `video/x-ms-asf`: ContentType = ContentType("video/x-ms-asf")
  def `video/x-msvideo`: ContentType = ContentType("video/x-msvideo")
  def `video/x-ms-vob`: ContentType = ContentType("video/x-ms-vob")
  def `video/x-ms-wm`: ContentType = ContentType("video/x-ms-wm")
  def `video/x-ms-wmv`: ContentType = ContentType("video/x-ms-wmv")
  def `video/x-ms-wmx`: ContentType = ContentType("video/x-ms-wmx")
  def `video/x-ms-wvx`: ContentType = ContentType("video/x-ms-wvx")
  def `video/x-sgi-movie`: ContentType = ContentType("video/x-sgi-movie")
  def `video/x-smv`: ContentType = ContentType("video/x-smv")
  def `x-conference/x-cooltalk`: ContentType = ContentType("x-conference/x-cooltalk")

  map("123", "application/vnd.lotus-1-2-3")
  map("3dml", "text/vnd.in3d.3dml")
  map("3ds", "image/x-3ds")
  map("3g2", "video/3gpp2")
  map("3gp", "video/3gpp")
  map("7z", "application/x-7z-compressed")
  map("aab", "application/x-authorware-bin")
  map("aac", "audio/x-aac")
  map("aam", "application/x-authorware-map")
  map("aas", "application/x-authorware-seg")
  map("abw", "application/x-abiword")
  map("ac", "application/pkix-attr-cert")
  map("acc", "application/vnd.americandynamics.acc")
  map("ace", "application/x-ace-compressed")
  map("acu", "application/vnd.acucobol")
  map("acutc", "application/vnd.acucorp")
  map("adp", "audio/adpcm")
  map("aep", "application/vnd.audiograph")
  map("afm", "application/x-font-type1")
  map("afp", "application/vnd.ibm.modcap")
  map("ahead", "application/vnd.ahead.space")
  map("ai", "application/postscript")
  map("aif", "audio/x-aiff")
  map("aifc", "audio/x-aiff")
  map("aiff", "audio/x-aiff")
  map("air", "application/vnd.adobe.air-application-installer-package+zip")
  map("ait", "application/vnd.dvb.ait")
  map("ami", "application/vnd.amiga.ami")
  map("apk", "application/vnd.android.package-archive")
  map("appcache", "text/cache-manifest")
  map("application", "application/x-ms-application")
  map("apr", "application/vnd.lotus-approach")
  map("arc", "application/x-freearc")
  map("asc", "application/pgp-signature")
  map("asf", "video/x-ms-asf")
  map("asm", "text/x-asm")
  map("aso", "application/vnd.accpac.simply.aso")
  map("asx", "video/x-ms-asf")
  map("atc", "application/vnd.acucorp")
  map("atom", "application/atom+xml")
  map("atomcat", "application/atomcat+xml")
  map("atomsvc", "application/atomsvc+xml")
  map("atx", "application/vnd.antix.game-component")
  map("au", "audio/basic")
  map("avi", "video/x-msvideo")
  map("aw", "application/applixware")
  map("azf", "application/vnd.airzip.filesecure.azf")
  map("azs", "application/vnd.airzip.filesecure.azs")
  map("azw", "application/vnd.amazon.ebook")
  map("bat", "application/x-msdownload")
  map("bcpio", "application/x-bcpio")
  map("bdf", "application/x-font-bdf")
  map("bdm", "application/vnd.syncml.dm+wbxml")
  map("bed", "application/vnd.realvnc.bed")
  map("bh2", "application/vnd.fujitsu.oasysprs")
  map("bin", "application/octet-stream")
  map("blb", "application/x-blorb")
  map("blorb", "application/x-blorb")
  map("bmi", "application/vnd.bmi")
  map("bmp", "image/bmp")
  map("book", "application/vnd.framemaker")
  map("box", "application/vnd.previewsystems.box")
  map("boz", "application/x-bzip2")
  map("bpk", "application/octet-stream")
  map("btif", "image/prs.btif")
  map("bz2", "application/x-bzip2")
  map("bz", "application/x-bzip")
  map("c11amc", "application/vnd.cluetrust.cartomobile-config")
  map("c11amz", "application/vnd.cluetrust.cartomobile-config-pkg")
  map("c4d", "application/vnd.clonk.c4group")
  map("c4f", "application/vnd.clonk.c4group")
  map("c4g", "application/vnd.clonk.c4group")
  map("c4p", "application/vnd.clonk.c4group")
  map("c4u", "application/vnd.clonk.c4group")
  map("cab", "application/vnd.ms-cab-compressed")
  map("caf", "audio/x-caf")
  map("cap", "application/vnd.tcpdump.pcap")
  map("car", "application/vnd.curl.car")
  map("cat", "application/vnd.ms-pki.seccat")
  map("cb7", "application/x-cbr")
  map("cba", "application/x-cbr")
  map("cbr", "application/x-cbr")
  map("cbt", "application/x-cbr")
  map("cbz", "application/x-cbr")
  map("cct", "application/x-director")
  map("cc", "text/x-c")
  map("ccxml", "application/ccxml+xml")
  map("cdbcmsg", "application/vnd.contact.cmsg")
  map("cdf", "application/x-netcdf")
  map("cdkey", "application/vnd.mediastation.cdkey")
  map("cdmia", "application/cdmi-capability")
  map("cdmic", "application/cdmi-container")
  map("cdmid", "application/cdmi-domain")
  map("cdmio", "application/cdmi-object")
  map("cdmiq", "application/cdmi-queue")
  map("cdx", "chemical/x-cdx")
  map("cdxml", "application/vnd.chemdraw+xml")
  map("cdy", "application/vnd.cinderella")
  map("cer", "application/pkix-cert")
  map("cfs", "application/x-cfs-compressed")
  map("cgm", "image/cgm")
  map("chat", "application/x-chat")
  map("chm", "application/vnd.ms-htmlhelp")
  map("chrt", "application/vnd.kde.kchart")
  map("cif", "chemical/x-cif")
  map("cii", "application/vnd.anser-web-certificate-issue-initiation")
  map("cil", "application/vnd.ms-artgalry")
  map("cla", "application/vnd.claymore")
  map("class", "application/java-vm")
  map("clkk", "application/vnd.crick.clicker.keyboard")
  map("clkp", "application/vnd.crick.clicker.palette")
  map("clkt", "application/vnd.crick.clicker.template")
  map("clkw", "application/vnd.crick.clicker.wordbank")
  map("clkx", "application/vnd.crick.clicker")
  map("clp", "application/x-msclip")
  map("cmc", "application/vnd.cosmocaller")
  map("cmdf", "chemical/x-cmdf")
  map("cml", "chemical/x-cml")
  map("cmp", "application/vnd.yellowriver-custom-menu")
  map("cmx", "image/x-cmx")
  map("cod", "application/vnd.rim.cod")
  map("com", "application/x-msdownload")
  map("conf", "text/plain")
  map("cpio", "application/x-cpio")
  map("cpp", "text/x-c")
  map("cpt", "application/mac-compactpro")
  map("crd", "application/x-mscardfile")
  map("crl", "application/pkix-crl")
  map("crt", "application/x-x509-ca-cert")
  map("cryptonote", "application/vnd.rig.cryptonote")
  map("csh", "application/x-csh")
  map("csml", "chemical/x-csml")
  map("csp", "application/vnd.commonspace")
  map("css", "text/css")
  map("cst", "application/x-director")
  map("csv", "text/csv")
  map("c", "text/x-c")
  map("cu", "application/cu-seeme")
  map("curl", "text/vnd.curl")
  map("cww", "application/prs.cww")
  map("cxt", "application/x-director")
  map("cxx", "text/x-c")
  map("dae", "model/vnd.collada+xml")
  map("daf", "application/vnd.mobius.daf")
  map("dart", "application/vnd.dart")
  map("dataless", "application/vnd.fdsn.seed")
  map("davmount", "application/davmount+xml")
  map("dbk", "application/docbook+xml")
  map("dcr", "application/x-director")
  map("dcurl", "text/vnd.curl.dcurl")
  map("dd2", "application/vnd.oma.dd2+xml")
  map("ddd", "application/vnd.fujixerox.ddd")
  map("deb", "application/x-debian-package")
  map("def", "text/plain")
  map("deploy", "application/octet-stream")
  map("der", "application/x-x509-ca-cert")
  map("dfac", "application/vnd.dreamfactory")
  map("dgc", "application/x-dgc-compressed")
  map("dic", "text/x-c")
  map("dir", "application/x-director")
  map("dis", "application/vnd.mobius.dis")
  map("dist", "application/octet-stream")
  map("distz", "application/octet-stream")
  map("djv", "image/vnd.djvu")
  map("djvu", "image/vnd.djvu")
  map("dll", "application/x-msdownload")
  map("dmg", "application/x-apple-diskimage")
  map("dmp", "application/vnd.tcpdump.pcap")
  map("dms", "application/octet-stream")
  map("dna", "application/vnd.dna")
  map("doc", "application/msword")
  map("docm", "application/vnd.ms-word.document.macroenabled.12")
  map("docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document")
  map("dot", "application/msword")
  map("dotm", "application/vnd.ms-word.template.macroenabled.12")
  map("dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template")
  map("dp", "application/vnd.osgi.dp")
  map("dpg", "application/vnd.dpgraph")
  map("dra", "audio/vnd.dra")
  map("dsc", "text/prs.lines.tag")
  map("dssc", "application/dssc+der")
  map("dtb", "application/x-dtbook+xml")
  map("dtd", "application/xml-dtd")
  map("dts", "audio/vnd.dts")
  map("dtshd", "audio/vnd.dts.hd")
  map("dump", "application/octet-stream")
  map("dvb", "video/vnd.dvb.file")
  map("dvi", "application/x-dvi")
  map("dwf", "model/vnd.dwf")
  map("dwg", "image/vnd.dwg")
  map("dxf", "image/vnd.dxf")
  map("dxp", "application/vnd.spotfire.dxp")
  map("dxr", "application/x-director")
  map("ecelp4800", "audio/vnd.nuera.ecelp4800")
  map("ecelp7470", "audio/vnd.nuera.ecelp7470")
  map("ecelp9600", "audio/vnd.nuera.ecelp9600")
  map("ecma", "application/ecmascript")
  map("edm", "application/vnd.novadigm.edm")
  map("edx", "application/vnd.novadigm.edx")
  map("efif", "application/vnd.picsel")
  map("ei6", "application/vnd.pg.osasli")
  map("elc", "application/octet-stream")
  map("emf", "application/x-msmetafile")
  map("eml", "message/rfc822")
  map("emma", "application/emma+xml")
  map("emz", "application/x-msmetafile")
  map("eol", "audio/vnd.digital-winds")
  map("eot", "application/vnd.ms-fontobject")
  map("eps", "application/postscript")
  map("epub", "application/epub+zip")
  map("es3", "application/vnd.eszigno3+xml")
  map("esa", "application/vnd.osgi.subsystem")
  map("esf", "application/vnd.epson.esf")
  map("et3", "application/vnd.eszigno3+xml")
  map("etx", "text/x-setext")
  map("eva", "application/x-eva")
  map("evy", "application/x-envoy")
  map("exe", "application/x-msdownload")
  map("exi", "application/exi")
  map("ext", "application/vnd.novadigm.ext")
  map("ez2", "application/vnd.ezpix-album")
  map("ez3", "application/vnd.ezpix-package")
  map("ez", "application/andrew-inset")
  map("f4v", "video/x-f4v")
  map("f77", "text/x-fortran")
  map("f90", "text/x-fortran")
  map("fbs", "image/vnd.fastbidsheet")
  map("fcdt", "application/vnd.adobe.formscentral.fcdt")
  map("fcs", "application/vnd.isac.fcs")
  map("fdf", "application/vnd.fdf")
  map("fe_launch", "application/vnd.denovo.fcselayout-link")
  map("fg5", "application/vnd.fujitsu.oasysgp")
  map("fgd", "application/x-director")
  map("fh4", "image/x-freehand")
  map("fh5", "image/x-freehand")
  map("fh7", "image/x-freehand")
  map("fhc", "image/x-freehand")
  map("fh", "image/x-freehand")
  map("fig", "application/x-xfig")
  map("flac", "audio/x-flac")
  map("fli", "video/x-fli")
  map("flo", "application/vnd.micrografx.flo")
  map("flv", "video/x-flv")
  map("flw", "application/vnd.kde.kivio")
  map("flx", "text/vnd.fmi.flexstor")
  map("fly", "text/vnd.fly")
  map("fm", "application/vnd.framemaker")
  map("fnc", "application/vnd.frogans.fnc")
  map("for", "text/x-fortran")
  map("fpx", "image/vnd.fpx")
  map("frame", "application/vnd.framemaker")
  map("fsc", "application/vnd.fsc.weblaunch")
  map("fst", "image/vnd.fst")
  map("ftc", "application/vnd.fluxtime.clip")
  map("f", "text/x-fortran")
  map("fti", "application/vnd.anser-web-funds-transfer-initiation")
  map("fvt", "video/vnd.fvt")
  map("fxp", "application/vnd.adobe.fxp")
  map("fxpl", "application/vnd.adobe.fxp")
  map("fzs", "application/vnd.fuzzysheet")
  map("g2w", "application/vnd.geoplan")
  map("g3", "image/g3fax")
  map("g3w", "application/vnd.geospace")
  map("gac", "application/vnd.groove-account")
  map("gam", "application/x-tads")
  map("gbr", "application/rpki-ghostbusters")
  map("gca", "application/x-gca-compressed")
  map("gdl", "model/vnd.gdl")
  map("geo", "application/vnd.dynageo")
  map("gex", "application/vnd.geometry-explorer")
  map("ggb", "application/vnd.geogebra.file")
  map("ggt", "application/vnd.geogebra.tool")
  map("ghf", "application/vnd.groove-help")
  map("gif", "image/gif")
  map("gim", "application/vnd.groove-identity-message")
  map("gml", "application/gml+xml")
  map("gmx", "application/vnd.gmx")
  map("gnumeric", "application/x-gnumeric")
  map("gph", "application/vnd.flographit")
  map("gpx", "application/gpx+xml")
  map("gqf", "application/vnd.grafeq")
  map("gqs", "application/vnd.grafeq")
  map("gram", "application/srgs")
  map("gramps", "application/x-gramps-xml")
  map("gre", "application/vnd.geometry-explorer")
  map("grv", "application/vnd.groove-injector")
  map("grxml", "application/srgs+xml")
  map("gsf", "application/x-font-ghostscript")
  map("gtar", "application/x-gtar")
  map("gtm", "application/vnd.groove-tool-message")
  map("gtw", "model/vnd.gtw")
  map("gv", "text/vnd.graphviz")
  map("gxf", "application/gxf")
  map("gxt", "application/vnd.geonext")
  map("h261", "video/h261")
  map("h263", "video/h263")
  map("h264", "video/h264")
  map("hal", "application/vnd.hal+xml")
  map("hbci", "application/vnd.hbci")
  map("hdf", "application/x-hdf")
  map("hh", "text/x-c")
  map("hlp", "application/winhlp")
  map("hpgl", "application/vnd.hp-hpgl")
  map("hpid", "application/vnd.hp-hpid")
  map("hps", "application/vnd.hp-hps")
  map("hqx", "application/mac-binhex40")
  map("h", "text/x-c")
  map("htke", "application/vnd.kenameaapp")
  map("html", "text/html")
  map("htm", "text/html")
  map("hvd", "application/vnd.yamaha.hv-dic")
  map("hvp", "application/vnd.yamaha.hv-voice")
  map("hvs", "application/vnd.yamaha.hv-script")
  map("i2g", "application/vnd.intergeo")
  map("icc", "application/vnd.iccprofile")
  map("ice", "x-conference/x-cooltalk")
  map("icm", "application/vnd.iccprofile")
  map("ico", "image/x-icon")
  map("ics", "text/calendar")
  map("ief", "image/ief")
  map("ifb", "text/calendar")
  map("ifm", "application/vnd.shana.informed.formdata")
  map("iges", "model/iges")
  map("igl", "application/vnd.igloader")
  map("igm", "application/vnd.insors.igm")
  map("igs", "model/iges")
  map("igx", "application/vnd.micrografx.igx")
  map("iif", "application/vnd.shana.informed.interchange")
  map("imp", "application/vnd.accpac.simply.imp")
  map("ims", "application/vnd.ms-ims")
  map("ink", "application/inkml+xml")
  map("inkml", "application/inkml+xml")
  map("install", "application/x-install-instructions")
  map("in", "text/plain")
  map("iota", "application/vnd.astraea-software.iota")
  map("ipfix", "application/ipfix")
  map("ipk", "application/vnd.shana.informed.package")
  map("irm", "application/vnd.ibm.rights-management")
  map("irp", "application/vnd.irepository.package+xml")
  map("iso", "application/x-iso9660-image")
  map("itp", "application/vnd.shana.informed.formtemplate")
  map("ivp", "application/vnd.immervision-ivp")
  map("ivu", "application/vnd.immervision-ivu")
  map("jad", "text/vnd.sun.j2me.app-descriptor")
  map("jam", "application/vnd.jam")
  map("jar", "application/java-archive")
  map("java", "text/x-java-source")
  map("jisp", "application/vnd.jisp")
  map("jlt", "application/vnd.hp-jlyt")
  map("jnlp", "application/x-java-jnlp-file")
  map("joda", "application/vnd.joost.joda-archive")
  map("jpeg", "image/jpeg")
  map("jpe", "image/jpeg")
  map("jpg", "image/jpeg")
  map("jpgm", "video/jpm")
  map("jpgv", "video/jpeg")
  map("jpm", "video/jpm")
  map("js", "application/javascript")
  map("json", "application/json")
  map("jsonml", "application/jsonml+json")
  map("kar", "audio/midi")
  map("karbon", "application/vnd.kde.karbon")
  map("kfo", "application/vnd.kde.kformula")
  map("kia", "application/vnd.kidspiration")
  map("kml", "application/vnd.google-earth.kml+xml")
  map("kmz", "application/vnd.google-earth.kmz")
  map("kne", "application/vnd.kinar")
  map("knp", "application/vnd.kinar")
  map("kon", "application/vnd.kde.kontour")
  map("kpr", "application/vnd.kde.kpresenter")
  map("kpt", "application/vnd.kde.kpresenter")
  map("kpxx", "application/vnd.ds-keypoint")
  map("ksp", "application/vnd.kde.kspread")
  map("ktr", "application/vnd.kahootz")
  map("ktx", "image/ktx")
  map("ktz", "application/vnd.kahootz")
  map("kwd", "application/vnd.kde.kword")
  map("kwt", "application/vnd.kde.kword")
  map("lasxml", "application/vnd.las.las+xml")
  map("latex", "application/x-latex")
  map("lbd", "application/vnd.llamagraphics.life-balance.desktop")
  map("lbe", "application/vnd.llamagraphics.life-balance.exchange+xml")
  map("les", "application/vnd.hhe.lesson-player")
  map("lha", "application/x-lzh-compressed")
  map("link66", "application/vnd.route66.link66+xml")
  map("list3820", "application/vnd.ibm.modcap")
  map("listafp", "application/vnd.ibm.modcap")
  map("list", "text/plain")
  map("lnk", "application/x-ms-shortcut")
  map("log", "text/plain")
  map("lostxml", "application/lost+xml")
  map("lrf", "application/octet-stream")
  map("lrm", "application/vnd.ms-lrm")
  map("ltf", "application/vnd.frogans.ltf")
  map("lvp", "audio/vnd.lucent.voice")
  map("lwp", "application/vnd.lotus-wordpro")
  map("lzh", "application/x-lzh-compressed")
  map("m13", "application/x-msmediaview")
  map("m14", "application/x-msmediaview")
  map("m1v", "video/mpeg")
  map("m21", "application/mp21")
  map("m2a", "audio/mpeg")
  map("m2v", "video/mpeg")
  map("m3a", "audio/mpeg")
  map("m3u8", "application/vnd.apple.mpegurl")
  map("m3u", "audio/x-mpegurl")
  map("m4a", "audio/mp4")
  map("m4u", "video/vnd.mpegurl")
  map("m4v", "video/x-m4v")
  map("ma", "application/mathematica")
  map("mads", "application/mads+xml")
  map("mag", "application/vnd.ecowin.chart")
  map("maker", "application/vnd.framemaker")
  map("man", "text/troff")
  map("mar", "application/octet-stream")
  map("mathml", "application/mathml+xml")
  map("mb", "application/mathematica")
  map("mbk", "application/vnd.mobius.mbk")
  map("mbox", "application/mbox")
  map("mc1", "application/vnd.medcalcdata")
  map("mcd", "application/vnd.mcd")
  map("mcurl", "text/vnd.curl.mcurl")
  map("mdb", "application/x-msaccess")
  map("mdi", "image/vnd.ms-modi")
  map("mesh", "model/mesh")
  map("meta4", "application/metalink4+xml")
  map("metalink", "application/metalink+xml")
  map("me", "text/troff")
  map("mets", "application/mets+xml")
  map("mfm", "application/vnd.mfmp")
  map("mft", "application/rpki-manifest")
  map("mgp", "application/vnd.osgeo.mapguide.package")
  map("mgz", "application/vnd.proteus.magazine")
  map("mid", "audio/midi")
  map("midi", "audio/midi")
  map("mie", "application/x-mie")
  map("mif", "application/vnd.mif")
  map("mime", "message/rfc822")
  map("mj2", "video/mj2")
  map("mjp2", "video/mj2")
  map("mk3d", "video/x-matroska")
  map("mka", "audio/x-matroska")
  map("mks", "video/x-matroska")
  map("mkv", "video/x-matroska")
  map("mlp", "application/vnd.dolby.mlp")
  map("mmd", "application/vnd.chipnuts.karaoke-mmd")
  map("mmf", "application/vnd.smaf")
  map("mmr", "image/vnd.fujixerox.edmics-mmr")
  map("mng", "video/x-mng")
  map("mny", "application/x-msmoney")
  map("mobi", "application/x-mobipocket-ebook")
  map("mods", "application/mods+xml")
  map("movie", "video/x-sgi-movie")
  map("mov", "video/quicktime")
  map("mp21", "application/mp21")
  map("mp2a", "audio/mpeg")
  map("mp2", "audio/mpeg")
  map("mp3", "audio/mpeg")
  map("mp4a", "audio/mp4")
  map("mp4s", "application/mp4")
  map("mp4", "video/mp4")
  map("mp4v", "video/mp4")
  map("mpc", "application/vnd.mophun.certificate")
  map("mpeg", "video/mpeg")
  map("mpe", "video/mpeg")
  map("mpg4", "video/mp4")
  map("mpga", "audio/mpeg")
  map("mpg", "video/mpeg")
  map("mpkg", "application/vnd.apple.installer+xml")
  map("mpm", "application/vnd.blueice.multipass")
  map("mpn", "application/vnd.mophun.application")
  map("mpp", "application/vnd.ms-project")
  map("mpt", "application/vnd.ms-project")
  map("mpy", "application/vnd.ibm.minipay")
  map("mqy", "application/vnd.mobius.mqy")
  map("mrc", "application/marc")
  map("mrcx", "application/marcxml+xml")
  map("mscml", "application/mediaservercontrol+xml")
  map("mseed", "application/vnd.fdsn.mseed")
  map("mseq", "application/vnd.mseq")
  map("msf", "application/vnd.epson.msf")
  map("msh", "model/mesh")
  map("msi", "application/x-msdownload")
  map("msl", "application/vnd.mobius.msl")
  map("ms", "text/troff")
  map("msty", "application/vnd.muvee.style")
  map("mts", "model/vnd.mts")
  map("mus", "application/vnd.musician")
  map("musicxml", "application/vnd.recordare.musicxml+xml")
  map("mvb", "application/x-msmediaview")
  map("mwf", "application/vnd.mfer")
  map("mxf", "application/mxf")
  map("mxl", "application/vnd.recordare.musicxml")
  map("mxml", "application/xv+xml")
  map("mxs", "application/vnd.triscape.mxs")
  map("mxu", "video/vnd.mpegurl")
  map("n3", "text/n3")
  map("nb", "application/mathematica")
  map("nbp", "application/vnd.wolfram.player")
  map("nc", "application/x-netcdf")
  map("ncx", "application/x-dtbncx+xml")
  map("nfo", "text/x-nfo")
  map("n-gage", "application/vnd.nokia.n-gage.symbian.install")
  map("ngdat", "application/vnd.nokia.n-gage.data")
  map("nitf", "application/vnd.nitf")
  map("nlu", "application/vnd.neurolanguage.nlu")
  map("nml", "application/vnd.enliven")
  map("nnd", "application/vnd.noblenet-directory")
  map("nns", "application/vnd.noblenet-sealer")
  map("nnw", "application/vnd.noblenet-web")
  map("npx", "image/vnd.net-fpx")
  map("nsc", "application/x-conference")
  map("nsf", "application/vnd.lotus-notes")
  map("ntf", "application/vnd.nitf")
  map("nzb", "application/x-nzb")
  map("oa2", "application/vnd.fujitsu.oasys2")
  map("oa3", "application/vnd.fujitsu.oasys3")
  map("oas", "application/vnd.fujitsu.oasys")
  map("obd", "application/x-msbinder")
  map("obj", "application/x-tgif")
  map("oda", "application/oda")
  map("odb", "application/vnd.oasis.opendocument.database")
  map("odc", "application/vnd.oasis.opendocument.chart")
  map("odf", "application/vnd.oasis.opendocument.formula")
  map("odft", "application/vnd.oasis.opendocument.formula-template")
  map("odg", "application/vnd.oasis.opendocument.graphics")
  map("odi", "application/vnd.oasis.opendocument.image")
  map("odm", "application/vnd.oasis.opendocument.text-master")
  map("odp", "application/vnd.oasis.opendocument.presentation")
  map("ods", "application/vnd.oasis.opendocument.spreadsheet")
  map("odt", "application/vnd.oasis.opendocument.text")
  map("oga", "audio/ogg")
  map("ogg", "audio/ogg")
  map("ogv", "video/ogg")
  map("ogx", "application/ogg")
  map("omdoc", "application/omdoc+xml")
  map("onepkg", "application/onenote")
  map("onetmp", "application/onenote")
  map("onetoc2", "application/onenote")
  map("onetoc", "application/onenote")
  map("opf", "application/oebps-package+xml")
  map("opml", "text/x-opml")
  map("oprc", "application/vnd.palm")
  map("org", "application/vnd.lotus-organizer")
  map("osf", "application/vnd.yamaha.openscoreformat")
  map("osfpvg", "application/vnd.yamaha.openscoreformat.osfpvg+xml")
  map("otc", "application/vnd.oasis.opendocument.chart-template")
  map("otf", "application/x-font-otf")
  map("otg", "application/vnd.oasis.opendocument.graphics-template")
  map("oth", "application/vnd.oasis.opendocument.text-web")
  map("oti", "application/vnd.oasis.opendocument.image-template")
  map("otp", "application/vnd.oasis.opendocument.presentation-template")
  map("ots", "application/vnd.oasis.opendocument.spreadsheet-template")
  map("ott", "application/vnd.oasis.opendocument.text-template")
  map("oxps", "application/oxps")
  map("oxt", "application/vnd.openofficeorg.extension")
  map("p10", "application/pkcs10")
  map("p12", "application/x-pkcs12")
  map("p7b", "application/x-pkcs7-certificates")
  map("p7c", "application/pkcs7-mime")
  map("p7m", "application/pkcs7-mime")
  map("p7r", "application/x-pkcs7-certreqresp")
  map("p7s", "application/pkcs7-signature")
  map("p8", "application/pkcs8")
  map("pas", "text/x-pascal")
  map("paw", "application/vnd.pawaafile")
  map("pbd", "application/vnd.powerbuilder6")
  map("pbm", "image/x-portable-bitmap")
  map("pcap", "application/vnd.tcpdump.pcap")
  map("pcf", "application/x-font-pcf")
  map("pcl", "application/vnd.hp-pcl")
  map("pclxl", "application/vnd.hp-pclxl")
  map("pct", "image/x-pict")
  map("pcurl", "application/vnd.curl.pcurl")
  map("pcx", "image/x-pcx")
  map("pdb", "application/vnd.palm")
  map("pdf", "application/pdf")
  map("pfa", "application/x-font-type1")
  map("pfb", "application/x-font-type1")
  map("pfm", "application/x-font-type1")
  map("pfr", "application/font-tdpfr")
  map("pfx", "application/x-pkcs12")
  map("pgm", "image/x-portable-graymap")
  map("pgn", "application/x-chess-pgn")
  map("pgp", "application/pgp-encrypted")
  map("pic", "image/x-pict")
  map("pkg", "application/octet-stream")
  map("pki", "application/pkixcmp")
  map("pkipath", "application/pkix-pkipath")
  map("plb", "application/vnd.3gpp.pic-bw-large")
  map("plc", "application/vnd.mobius.plc")
  map("plf", "application/vnd.pocketlearn")
  map("pls", "application/pls+xml")
  map("pml", "application/vnd.ctc-posml")
  map("png", "image/png")
  map("pnm", "image/x-portable-anymap")
  map("portpkg", "application/vnd.macports.portpkg")
  map("pot", "application/vnd.ms-powerpoint")
  map("potm", "application/vnd.ms-powerpoint.template.macroenabled.12")
  map("potx", "application/vnd.openxmlformats-officedocument.presentationml.template")
  map("ppam", "application/vnd.ms-powerpoint.addin.macroenabled.12")
  map("ppd", "application/vnd.cups-ppd")
  map("ppm", "image/x-portable-pixmap")
  map("pps", "application/vnd.ms-powerpoint")
  map("ppsm", "application/vnd.ms-powerpoint.slideshow.macroenabled.12")
  map("ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow")
  map("ppt", "application/vnd.ms-powerpoint")
  map("pptm", "application/vnd.ms-powerpoint.presentation.macroenabled.12")
  map("pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation")
  map("pqa", "application/vnd.palm")
  map("prc", "application/x-mobipocket-ebook")
  map("pre", "application/vnd.lotus-freelance")
  map("prf", "application/pics-rules")
  map("ps", "application/postscript")
  map("psb", "application/vnd.3gpp.pic-bw-small")
  map("psd", "image/vnd.adobe.photoshop")
  map("psf", "application/x-font-linux-psf")
  map("pskcxml", "application/pskc+xml")
  map("p", "text/x-pascal")
  map("ptid", "application/vnd.pvi.ptid1")
  map("pub", "application/x-mspublisher")
  map("pvb", "application/vnd.3gpp.pic-bw-var")
  map("pwn", "application/vnd.3m.post-it-notes")
  map("pya", "audio/vnd.ms-playready.media.pya")
  map("pyv", "video/vnd.ms-playready.media.pyv")
  map("qam", "application/vnd.epson.quickanime")
  map("qbo", "application/vnd.intu.qbo")
  map("qfx", "application/vnd.intu.qfx")
  map("qps", "application/vnd.publishare-delta-tree")
  map("qt", "video/quicktime")
  map("qwd", "application/vnd.quark.quarkxpress")
  map("qwt", "application/vnd.quark.quarkxpress")
  map("qxb", "application/vnd.quark.quarkxpress")
  map("qxd", "application/vnd.quark.quarkxpress")
  map("qxl", "application/vnd.quark.quarkxpress")
  map("qxt", "application/vnd.quark.quarkxpress")
  map("ra", "audio/x-pn-realaudio")
  map("ram", "audio/x-pn-realaudio")
  map("rar", "application/x-rar-compressed")
  map("ras", "image/x-cmu-raster")
  map("rcprofile", "application/vnd.ipunplugged.rcprofile")
  map("rdf", "application/rdf+xml")
  map("rdz", "application/vnd.data-vision.rdz")
  map("rep", "application/vnd.businessobjects")
  map("res", "application/x-dtbresource+xml")
  map("rgb", "image/x-rgb")
  map("rif", "application/reginfo+xml")
  map("rip", "audio/vnd.rip")
  map("ris", "application/x-research-info-systems")
  map("rl", "application/resource-lists+xml")
  map("rlc", "image/vnd.fujixerox.edmics-rlc")
  map("rld", "application/resource-lists-diff+xml")
  map("rm", "application/vnd.rn-realmedia")
  map("rmi", "audio/midi")
  map("rmp", "audio/x-pn-realaudio-plugin")
  map("rms", "application/vnd.jcp.javame.midlet-rms")
  map("rmvb", "application/vnd.rn-realmedia-vbr")
  map("rnc", "application/relax-ng-compact-syntax")
  map("roa", "application/rpki-roa")
  map("roff", "text/troff")
  map("rp9", "application/vnd.cloanto.rp9")
  map("rpss", "application/vnd.nokia.radio-presets")
  map("rpst", "application/vnd.nokia.radio-preset")
  map("rq", "application/sparql-query")
  map("rs", "application/rls-services+xml")
  map("rsd", "application/rsd+xml")
  map("rss", "application/rss+xml")
  map("rtf", "application/rtf")
  map("rtx", "text/richtext")
  map("s3m", "audio/s3m")
  map("saf", "application/vnd.yamaha.smaf-audio")
  map("sbml", "application/sbml+xml")
  map("sc", "application/vnd.ibm.secure-container")
  map("scd", "application/x-msschedule")
  map("scm", "application/vnd.lotus-screencam")
  map("scq", "application/scvp-cv-request")
  map("scs", "application/scvp-cv-response")
  map("scurl", "text/vnd.curl.scurl")
  map("sda", "application/vnd.stardivision.draw")
  map("sdc", "application/vnd.stardivision.calc")
  map("sdd", "application/vnd.stardivision.impress")
  map("sdkd", "application/vnd.solent.sdkm+xml")
  map("sdkm", "application/vnd.solent.sdkm+xml")
  map("sdp", "application/sdp")
  map("sdw", "application/vnd.stardivision.writer")
  map("see", "application/vnd.seemail")
  map("seed", "application/vnd.fdsn.seed")
  map("sema", "application/vnd.sema")
  map("semd", "application/vnd.semd")
  map("semf", "application/vnd.semf")
  map("ser", "application/java-serialized-object")
  map("setpay", "application/set-payment-initiation")
  map("setreg", "application/set-registration-initiation")
  map("sfd-hdstx", "application/vnd.hydrostatix.sof-data")
  map("sfs", "application/vnd.spotfire.sfs")
  map("sfv", "text/x-sfv")
  map("sgi", "image/sgi")
  map("sgl", "application/vnd.stardivision.writer-global")
  map("sgml", "text/sgml")
  map("sgm", "text/sgml")
  map("sh", "application/x-sh")
  map("shar", "application/x-shar")
  map("shf", "application/shf+xml")
  map("sid", "image/x-mrsid-image")
  map("sig", "application/pgp-signature")
  map("sil", "audio/silk")
  map("silo", "model/mesh")
  map("sis", "application/vnd.symbian.install")
  map("sisx", "application/vnd.symbian.install")
  map("sit", "application/x-stuffit")
  map("sitx", "application/x-stuffitx")
  map("skd", "application/vnd.koan")
  map("skm", "application/vnd.koan")
  map("skp", "application/vnd.koan")
  map("skt", "application/vnd.koan")
  map("sldm", "application/vnd.ms-powerpoint.slide.macroenabled.12")
  map("sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide")
  map("slt", "application/vnd.epson.salt")
  map("sm", "application/vnd.stepmania.stepchart")
  map("smf", "application/vnd.stardivision.math")
  map("smi", "application/smil+xml")
  map("smil", "application/smil+xml")
  map("smv", "video/x-smv")
  map("smzip", "application/vnd.stepmania.package")
  map("snd", "audio/basic")
  map("snf", "application/x-font-snf")
  map("so", "application/octet-stream")
  map("spc", "application/x-pkcs7-certificates")
  map("spf", "application/vnd.yamaha.smaf-phrase")
  map("spl", "application/x-futuresplash")
  map("spot", "text/vnd.in3d.spot")
  map("spp", "application/scvp-vp-response")
  map("spq", "application/scvp-vp-request")
  map("spx", "audio/ogg")
  map("sql", "application/x-sql")
  map("src", "application/x-wais-source")
  map("srt", "application/x-subrip")
  map("sru", "application/sru+xml")
  map("srx", "application/sparql-results+xml")
  map("ssdl", "application/ssdl+xml")
  map("sse", "application/vnd.kodak-descriptor")
  map("ssf", "application/vnd.epson.ssf")
  map("ssml", "application/ssml+xml")
  map("st", "application/vnd.sailingtracker.track")
  map("stc", "application/vnd.sun.xml.calc.template")
  map("std", "application/vnd.sun.xml.draw.template")
  map("s", "text/x-asm")
  map("stf", "application/vnd.wt.stf")
  map("sti", "application/vnd.sun.xml.impress.template")
  map("stk", "application/hyperstudio")
  map("stl", "application/vnd.ms-pki.stl")
  map("str", "application/vnd.pg.format")
  map("stw", "application/vnd.sun.xml.writer.template")
  map("sub", "image/vnd.dvb.subtitle")
  map("sub", "text/vnd.dvb.subtitle")
  map("sus", "application/vnd.sus-calendar")
  map("susp", "application/vnd.sus-calendar")
  map("sv4cpio", "application/x-sv4cpio")
  map("sv4crc", "application/x-sv4crc")
  map("svc", "application/vnd.dvb.service")
  map("svd", "application/vnd.svd")
  map("svg", "image/svg+xml")
  map("svgz", "image/svg+xml")
  map("swa", "application/x-director")
  map("swf", "application/x-shockwave-flash")
  map("swi", "application/vnd.aristanetworks.swi")
  map("sxc", "application/vnd.sun.xml.calc")
  map("sxd", "application/vnd.sun.xml.draw")
  map("sxg", "application/vnd.sun.xml.writer.global")
  map("sxi", "application/vnd.sun.xml.impress")
  map("sxm", "application/vnd.sun.xml.math")
  map("sxw", "application/vnd.sun.xml.writer")
  map("t3", "application/x-t3vm-image")
  map("taglet", "application/vnd.mynfc")
  map("tao", "application/vnd.tao.intent-module-archive")
  map("tar", "application/x-tar")
  map("tcap", "application/vnd.3gpp2.tcap")
  map("tcl", "application/x-tcl")
  map("teacher", "application/vnd.smart.teacher")
  map("tei", "application/tei+xml")
  map("teicorpus", "application/tei+xml")
  map("tex", "application/x-tex")
  map("texi", "application/x-texinfo")
  map("texinfo", "application/x-texinfo")
  map("text", "text/plain")
  map("tfi", "application/thraud+xml")
  map("tfm", "application/x-tex-tfm")
  map("tga", "image/x-tga")
  map("thmx", "application/vnd.ms-officetheme")
  map("tiff", "image/tiff")
  map("tif", "image/tiff")
  map("tmo", "application/vnd.tmobile-livetv")
  map("torrent", "application/x-bittorrent")
  map("tpl", "application/vnd.groove-tool-template")
  map("tpt", "application/vnd.trid.tpt")
  map("tra", "application/vnd.trueapp")
  map("trm", "application/x-msterminal")
  map("tr", "text/troff")
  map("tsd", "application/timestamped-data")
  map("tsv", "text/tab-separated-values")
  map("ttc", "application/x-font-ttf")
  map("t", "text/troff")
  map("ttf", "application/x-font-ttf")
  map("ttl", "text/turtle")
  map("twd", "application/vnd.simtech-mindmapper")
  map("twds", "application/vnd.simtech-mindmapper")
  map("txd", "application/vnd.genomatix.tuxedo")
  map("txf", "application/vnd.mobius.txf")
  map("txt", "text/plain")
  map("u32", "application/x-authorware-bin")
  map("udeb", "application/x-debian-package")
  map("ufd", "application/vnd.ufdl")
  map("ufdl", "application/vnd.ufdl")
  map("ulx", "application/x-glulx")
  map("umj", "application/vnd.umajin")
  map("unityweb", "application/vnd.unity")
  map("uoml", "application/vnd.uoml+xml")
  map("uris", "text/uri-list")
  map("uri", "text/uri-list")
  map("urls", "text/uri-list")
  map("ustar", "application/x-ustar")
  map("utz", "application/vnd.uiq.theme")
  map("uu", "text/x-uuencode")
  map("uva", "audio/vnd.dece.audio")
  map("uvd", "application/vnd.dece.data")
  map("uvf", "application/vnd.dece.data")
  map("uvg", "image/vnd.dece.graphic")
  map("uvh", "video/vnd.dece.hd")
  map("uvi", "image/vnd.dece.graphic")
  map("uvm", "video/vnd.dece.mobile")
  map("uvp", "video/vnd.dece.pd")
  map("uvs", "video/vnd.dece.sd")
  map("uvt", "application/vnd.dece.ttml+xml")
  map("uvu", "video/vnd.uvvu.mp4")
  map("uvva", "audio/vnd.dece.audio")
  map("uvvd", "application/vnd.dece.data")
  map("uvvf", "application/vnd.dece.data")
  map("uvvg", "image/vnd.dece.graphic")
  map("uvvh", "video/vnd.dece.hd")
  map("uvvi", "image/vnd.dece.graphic")
  map("uvvm", "video/vnd.dece.mobile")
  map("uvvp", "video/vnd.dece.pd")
  map("uvvs", "video/vnd.dece.sd")
  map("uvvt", "application/vnd.dece.ttml+xml")
  map("uvvu", "video/vnd.uvvu.mp4")
  map("uvv", "video/vnd.dece.video")
  map("uvvv", "video/vnd.dece.video")
  map("uvvx", "application/vnd.dece.unspecified")
  map("uvvz", "application/vnd.dece.zip")
  map("uvx", "application/vnd.dece.unspecified")
  map("uvz", "application/vnd.dece.zip")
  map("vcard", "text/vcard")
  map("vcd", "application/x-cdlink")
  map("vcf", "text/x-vcard")
  map("vcg", "application/vnd.groove-vcard")
  map("vcs", "text/x-vcalendar")
  map("vcx", "application/vnd.vcx")
  map("vis", "application/vnd.visionary")
  map("viv", "video/vnd.vivo")
  map("vob", "video/x-ms-vob")
  map("vor", "application/vnd.stardivision.writer")
  map("vox", "application/x-authorware-bin")
  map("vrml", "model/vrml")
  map("vsd", "application/vnd.visio")
  map("vsf", "application/vnd.vsf")
  map("vss", "application/vnd.visio")
  map("vst", "application/vnd.visio")
  map("vsw", "application/vnd.visio")
  map("vtu", "model/vnd.vtu")
  map("vxml", "application/voicexml+xml")
  map("w3d", "application/x-director")
  map("wad", "application/x-doom")
  map("wav", "audio/x-wav")
  map("wax", "audio/x-ms-wax")
  map("wbmp", "image/vnd.wap.wbmp")
  map("wbs", "application/vnd.criticaltools.wbs+xml")
  map("wbxml", "application/vnd.wap.wbxml")
  map("wcm", "application/vnd.ms-works")
  map("wdb", "application/vnd.ms-works")
  map("wdp", "image/vnd.ms-photo")
  map("weba", "audio/webm")
  map("webm", "video/webm")
  map("webp", "image/webp")
  map("wg", "application/vnd.pmi.widget")
  map("wgt", "application/widget")
  map("wks", "application/vnd.ms-works")
  map("wma", "audio/x-ms-wma")
  map("wmd", "application/x-ms-wmd")
  map("wmf", "application/x-msmetafile")
  map("wmlc", "application/vnd.wap.wmlc")
  map("wmlsc", "application/vnd.wap.wmlscriptc")
  map("wmls", "text/vnd.wap.wmlscript")
  map("wml", "text/vnd.wap.wml")
  map("wm", "video/x-ms-wm")
  map("wmv", "video/x-ms-wmv")
  map("wmx", "video/x-ms-wmx")
  map("wmz", "application/x-msmetafile")
  map("wmz", "application/x-ms-wmz")
  map("woff", "application/font-woff")
  map("wpd", "application/vnd.wordperfect")
  map("wpl", "application/vnd.ms-wpl")
  map("wps", "application/vnd.ms-works")
  map("wqd", "application/vnd.wqd")
  map("wri", "application/x-mswrite")
  map("wrl", "model/vrml")
  map("wsdl", "application/wsdl+xml")
  map("wspolicy", "application/wspolicy+xml")
  map("wtb", "application/vnd.webturbo")
  map("wvx", "video/x-ms-wvx")
  map("x32", "application/x-authorware-bin")
  map("x3db", "model/x3d+binary")
  map("x3dbz", "model/x3d+binary")
  map("x3d", "model/x3d+xml")
  map("x3dv", "model/x3d+vrml")
  map("x3dvz", "model/x3d+vrml")
  map("x3dz", "model/x3d+xml")
  map("xaml", "application/xaml+xml")
  map("xap", "application/x-silverlight-app")
  map("xar", "application/vnd.xara")
  map("xbap", "application/x-ms-xbap")
  map("xbd", "application/vnd.fujixerox.docuworks.binder")
  map("xbm", "image/x-xbitmap")
  map("xdf", "application/xcap-diff+xml")
  map("xdm", "application/vnd.syncml.dm+xml")
  map("xdp", "application/vnd.adobe.xdp+xml")
  map("xdssc", "application/dssc+xml")
  map("xdw", "application/vnd.fujixerox.docuworks")
  map("xenc", "application/xenc+xml")
  map("xer", "application/patch-ops-error+xml")
  map("xfdf", "application/vnd.adobe.xfdf")
  map("xfdl", "application/vnd.xfdl")
  map("xht", "application/xhtml+xml")
  map("xhtml", "application/xhtml+xml")
  map("xhvml", "application/xv+xml")
  map("xif", "image/vnd.xiff")
  map("xla", "application/vnd.ms-excel")
  map("xlam", "application/vnd.ms-excel.addin.macroenabled.12")
  map("xlc", "application/vnd.ms-excel")
  map("xlf", "application/x-xliff+xml")
  map("xlm", "application/vnd.ms-excel")
  map("xls", "application/vnd.ms-excel")
  map("xlsb", "application/vnd.ms-excel.sheet.binary.macroenabled.12")
  map("xlsm", "application/vnd.ms-excel.sheet.macroenabled.12")
  map("xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
  map("xlt", "application/vnd.ms-excel")
  map("xltm", "application/vnd.ms-excel.template.macroenabled.12")
  map("xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template")
  map("xlw", "application/vnd.ms-excel")
  map("xm", "audio/xm")
  map("xml", "text/xml")
  map("xo", "application/vnd.olpc-sugar")
  map("xop", "application/xop+xml")
  map("xpi", "application/x-xpinstall")
  map("xpl", "application/xproc+xml")
  map("xpm", "image/x-xpixmap")
  map("xpr", "application/vnd.is-xpr")
  map("xps", "application/vnd.ms-xpsdocument")
  map("xpw", "application/vnd.intercon.formnet")
  map("xpx", "application/vnd.intercon.formnet")
  map("xsl", "application/xml")
  map("xslt", "application/xslt+xml")
  map("xsm", "application/vnd.syncml+xml")
  map("xspf", "application/xspf+xml")
  map("xul", "application/vnd.mozilla.xul+xml")
  map("xvm", "application/xv+xml")
  map("xvml", "application/xv+xml")
  map("xwd", "image/x-xwindowdump")
  map("xyz", "chemical/x-xyz")
  map("xz", "application/x-xz")
  map("yang", "application/yang")
  map("yin", "application/yin+xml")
  map("z1", "application/x-zmachine")
  map("z2", "application/x-zmachine")
  map("z3", "application/x-zmachine")
  map("z4", "application/x-zmachine")
  map("z5", "application/x-zmachine")
  map("z6", "application/x-zmachine")
  map("z7", "application/x-zmachine")
  map("z8", "application/x-zmachine")
  map("zaz", "application/vnd.zzazz.deck+xml")
  map("zip", "application/zip")
  map("zir", "application/vnd.zul")
  map("zirz", "application/vnd.zul")
  map("zmm", "application/vnd.handheld-entertainment+xml")

  def parse(contentTypeString: String): ContentType = {
    val parts = contentTypeString.split(';')
    var contentType = ContentType(parts(0).trim)
    parts.tail.foreach { s =>
      val block = s.trim
      val divider = block.indexOf('=')
      if (divider == -1) {
        throw new RuntimeException(s"Unable to parse content type: [$contentTypeString]")
      }
      val name = block.substring(0, divider)
      val value = block.substring(divider + 1)
      name match {
        case "boundary" => contentType = contentType.copy(boundary = Some(value))
        case "charset" => contentType = contentType.copy(charSet = Some(value))
        case _ => throw new RuntimeException(s"Unable to parse content type: [$contentTypeString]")
      }
    }
    contentType
  }

  def byFileName(fileName: String): ContentType = getByFileName(fileName).getOrElse(ContentType.`application/octet-stream`)
  def byExtension(extension: String): ContentType = getByExtension(extension).getOrElse(ContentType.`application/octet-stream`)

  def getByFileName(fileName: String): Option[ContentType] = {
    val index = fileName.lastIndexOf('.')
    if (index == -1) {
      None
    } else {
      val extension = fileName.substring(index + 1)
      getByExtension(extension)
    }
  }

  def getByExtension(extension: String): Option[ContentType] = {
    extension2MimeType.get(extension.toLowerCase).map(ContentType(_))
  }
}