package org.hyperscala.html

import attributes._
import event.EventSupport
import org.hyperscala._
import org.hyperscala.css.StyleSheet
import scala.collection.{Map => ScalaMap}

/**
 * NOTE: This file has been generated. Do not modify directly!
 * @author Matt Hicks <matt@outr.com>
 */
trait HTMLTag extends Tag with EventSupport {
  %s

  val style = new PropertyAttribute[StyleSheet]("style", null, inclusion = InclusionMode.NotEmpty) with LazyProperty[StyleSheet] {
    protected def lazyValue = new StyleSheet
  }

  protected def generateChildFromTagName(name: String): XMLContent = {
    HTMLTag.create(name)
  }

  protected def processText(text: String): Unit = {
    this.asInstanceOf[Container[HTMLTag]].contents += new Text(text)
  }
}

object HTMLTag {
  private val registry = ScalaMap(%s)

  def create(tagName: String) = {
    registry(tagName).newInstance().asInstanceOf[XMLContent]
  }
}